// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pet_spa_system1.Models;

#nullable disable

namespace pet_spa_system1.Migrations
{
    [DbContext(typeof(PetDataShopContext))]
    partial class PetDataShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")

                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("pet_spa_system1.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppointmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int")
                        .HasColumnName("PromotionID");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("StatusID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("AppointmentId")
                        .HasName("PK__Appointm__8ECDFCA23670C808");


                    b.HasIndex("EmployeeId");

                    b.HasIndex("PromotionId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("pet_spa_system1.Models.AppointmentPet", b =>
                {
                    b.Property<int>("AppointmentPetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppointmentPetID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentPetId"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int")
                        .HasColumnName("AppointmentID");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("PetId")
                        .HasColumnType("int")
                        .HasColumnName("PetID");

                    b.HasKey("AppointmentPetId")
                        .HasName("PK__Appointm__C8A4B64CA6DA51B6");


                    b.HasIndex("PetId");

                    b.HasIndex(new[] { "AppointmentId", "PetId" }, "UQ_AppointmentPet")
                        .IsUnique();

                    b.ToTable("AppointmentPets");
                });

            modelBuilder.Entity("pet_spa_system1.Models.AppointmentService", b =>
                {
                    b.Property<int>("AppointmentServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppointmentServiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentServiceId"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int")
                        .HasColumnName("AppointmentID");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    b.HasKey("AppointmentServiceId")

                        .HasName("PK__Appointm__3B38F2769A969488");


                    b.HasIndex("ServiceId");

                    b.HasIndex(new[] { "AppointmentId", "ServiceId" }, "UQ_AppointmentService")
                        .IsUnique();

                    b.ToTable("AppointmentServices");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BlogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogId"));

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentFormat")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Markdown");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Draft");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("BlogId")
                        .HasName("PK__Blogs__54379E5030BDEFFE");


                    b.HasIndex("ApprovedBy");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("pet_spa_system1.Models.BlogImage", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ImageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int")
                        .HasColumnName("BlogID");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("DisplayOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ImageId")
                        .HasName("PK__Blog_Ima__7516F4EC38AEEF0C");


                    b.HasIndex("BlogId");

                    b.ToTable("Blog_Images", (string)null);
                });

            modelBuilder.Entity("pet_spa_system1.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CartID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<DateTime?>("AddedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("CartId")
                        .HasName("PK__Cart__51BCD797425594A1");

                    b.HasIndex("ProductId");

                    b.HasIndex(new[] { "UserId", "ProductId" }, "UQ_Cart_User_Product")
                        .IsUnique();

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("pet_spa_system1.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("StatusID");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BAF14803C64");


                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("pet_spa_system1.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderItemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId")

                        .HasName("PK__OrderIte__57ED06A145762658");


                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<DateTime?>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentMethodID");

                    b.Property<int>("PaymentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("PaymentStatusID");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TransactionID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("PaymentId")

                        .HasName("PK__Payments__9B556A5894476BCB");


                    b.HasIndex("OrderId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("PaymentStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("pet_spa_system1.Models.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentMethodID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentMethodId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PaymentMethodId")

                        .HasName("PK__PaymentM__DC31C1F3373BC567");

                    b.HasIndex(new[] { "MethodName" }, "UQ__PaymentM__218CFB177B59A092")

                        .IsUnique();

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("pet_spa_system1.Models.PaymentStatus", b =>
                {
                    b.Property<int>("PaymentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentStatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentStatusId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PaymentStatusId")
                        .HasName("PK__PaymentS__34F8AC1FC01635D2");

                    b.HasIndex(new[] { "StatusName" }, "UQ__PaymentS__05E7698A2D1F0BC1")

                        .IsUnique();

                    b.ToTable("PaymentStatuses");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Pet", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PetID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetId"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Breed")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HealthCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LastSpaVisit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SpecialNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SpeciesId")
                        .HasColumnType("int")
                        .HasColumnName("SpeciesID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("PetId")

                        .HasName("PK__Pets__48E5380210259056");


                    b.HasIndex("SpeciesId");

                    b.HasIndex("UserId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ImageURL");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductId")
                        .HasName("PK__Products__B40CC6ED2D221A24");


                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("pet_spa_system1.Models.ProductCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<int?>("CateParent")
                        .HasColumnType("int")
                        .HasColumnName("Cate_parent");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId")

                        .HasName("PK__ProductC__19093A2B018DDA6A");

                    b.HasIndex("CateParent");

                    b.HasIndex(new[] { "Name", "CateParent" }, "UQ_ProductCategories_Name_CateParent")
                        .IsUnique()
                        .HasFilter("[Cate_parent] IS NOT NULL");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PromotionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionId"));

                    b.Property<string>("ApplicableTo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int?>("MaxUsage")
                        .HasColumnType("int");

                    b.Property<decimal?>("MinOrderValue")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("PromotionId")

                        .HasName("PK__Promotio__52C42F2FD01CEAE3");

                    b.HasIndex(new[] { "Code" }, "UQ__Promotio__A25C5AA7756B87FD")

                        .IsUnique();

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("pet_spa_system1.Models.PromotionProduct", b =>
                {
                    b.Property<int>("PromotionProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PromotionProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionProductId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int")
                        .HasColumnName("PromotionID");

                    b.HasKey("PromotionProductId")

                        .HasName("PK__Promotio__C7B85D3CFC1CCADF");


                    b.HasIndex("ProductId");

                    b.HasIndex(new[] { "PromotionId", "ProductId" }, "UQ_PromotionProduct")
                        .IsUnique();

                    b.ToTable("Promotion_Products", (string)null);
                });

            modelBuilder.Entity("pet_spa_system1.Models.PromotionService", b =>
                {
                    b.Property<int>("PromotionServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PromotionServiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionServiceId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int")
                        .HasColumnName("PromotionID");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    b.HasKey("PromotionServiceId")
                    .HasName("PK__Promotio__1F3D2989A0791F9F");


                    b.HasIndex("ServiceId");

                    b.HasIndex(new[] { "PromotionId", "ServiceId" }, "UQ_PromotionService")
                        .IsUnique();

                    b.ToTable("Promotion_Services", (string)null);
                });

            modelBuilder.Entity("pet_spa_system1.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReviewID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ReviewId")

                        .HasName("PK__Reviews__74BC79AEE8B54A5E");


                    b.HasIndex("ProductId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")

                        .HasName("PK__Roles__8AFACE3A2AE6D04A");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Roles__8A2B6160EF2B897A")

                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("pet_spa_system1.Models.SerCate", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<int?>("CateParent")
                        .HasColumnType("int")
                        .HasColumnName("Cate_parent");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId")

                        .HasName("PK__Ser_cate__19093A2B212F7B9B");

                    b.HasIndex("CateParent");

                    b.HasIndex(new[] { "Name" }, "UQ__Ser_cate__737584F65059F3BE")

                        .IsUnique();

                    b.ToTable("Ser_cate", (string)null);
                });

            modelBuilder.Entity("pet_spa_system1.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("ServiceId")

                        .HasName("PK__Services__C51BB0EA1306BBD1");


                    b.HasIndex("CategoryId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Species", b =>
                {
                    b.Property<int>("SpeciesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SpeciesID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpeciesId"));

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("SpeciesName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SpeciesId")

                        .HasName("PK__Species__A938047F36AD4C1D");

                    b.HasIndex(new[] { "SpeciesName" }, "UQ__Species__304D4C0DF7953DBE")

                        .IsUnique();

                    b.ToTable("Species");
                });

            modelBuilder.Entity("pet_spa_system1.Models.StatusAppointment", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("StatusId")

                        .HasName("PK__Status_A__C8EE2043C40C9C90");

                    b.HasIndex(new[] { "StatusName" }, "UQ__Status_A__05E7698A6AA1FB28")

                        .IsUnique();

                    b.ToTable("Status_Appointment", (string)null);
                });

            modelBuilder.Entity("pet_spa_system1.Models.StatusOrder", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("StatusId")

                        .HasName("PK__StatusOr__C8EE20439110246B");

                    b.HasIndex(new[] { "StatusName" }, "UQ__StatusOr__05E7698A3F10F5B1")

                        .IsUnique();

                    b.ToTable("StatusOrder", (string)null);
                });

            modelBuilder.Entity("pet_spa_system1.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")

                        .HasName("PK__Users__1788CCACDAB49FBF");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__536C85E4D5AF8C38")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534A392ED30")

                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Appointment", b =>
                {
                    b.HasOne("pet_spa_system1.Models.User", "Employee")
                        .WithMany("AppointmentEmployees")
                        .HasForeignKey("EmployeeId")

                        .HasConstraintName("FK__Appointme__Emplo__03F0984C");


                    b.HasOne("pet_spa_system1.Models.Promotion", "Promotion")
                        .WithMany("Appointments")
                        .HasForeignKey("PromotionId")

                        .HasConstraintName("FK__Appointme__Promo__04E4BC85");


                    b.HasOne("pet_spa_system1.Models.StatusAppointment", "Status")
                        .WithMany("Appointments")
                        .HasForeignKey("StatusId")
                        .IsRequired()

                        .HasConstraintName("FK__Appointme__Statu__05D8E0BE");


                    b.HasOne("pet_spa_system1.Models.User", "User")
                        .WithMany("AppointmentUsers")
                        .HasForeignKey("UserId")
                        .IsRequired()

                        .HasConstraintName("FK__Appointme__UserI__02FC7413");


                    b.Navigation("Employee");

                    b.Navigation("Promotion");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("pet_spa_system1.Models.AppointmentPet", b =>
                {
                    b.HasOne("pet_spa_system1.Models.Appointment", "Appointment")
                        .WithMany("AppointmentPets")
                        .HasForeignKey("AppointmentId")
                        .IsRequired()

                        .HasConstraintName("FK__Appointme__Appoi__0A9D95DB");


                    b.HasOne("pet_spa_system1.Models.Pet", "Pet")
                        .WithMany("AppointmentPets")
                        .HasForeignKey("PetId")
                        .IsRequired()

                        .HasConstraintName("FK__Appointme__PetID__0B91BA14");


                    b.Navigation("Appointment");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("pet_spa_system1.Models.AppointmentService", b =>
                {
                    b.HasOne("pet_spa_system1.Models.Appointment", "Appointment")
                        .WithMany("AppointmentServices")
                        .HasForeignKey("AppointmentId")
                        .IsRequired()

                        .HasConstraintName("FK__Appointme__Appoi__10566F31");


                    b.HasOne("pet_spa_system1.Models.Service", "Service")
                        .WithMany("AppointmentServices")
                        .HasForeignKey("ServiceId")
                        .IsRequired()

                        .HasConstraintName("FK__Appointme__Servi__114A936A");


                    b.Navigation("Appointment");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Blog", b =>
                {
                    b.HasOne("pet_spa_system1.Models.User", "ApprovedByNavigation")
                        .WithMany("BlogApprovedByNavigations")
                        .HasForeignKey("ApprovedBy")

                        .HasConstraintName("FK__Blogs__ApprovedB__4A8310C6");


                    b.HasOne("pet_spa_system1.Models.User", "User")
                        .WithMany("BlogUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()

                        .HasConstraintName("FK__Blogs__UserID__498EEC8D");


                    b.Navigation("ApprovedByNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("pet_spa_system1.Models.BlogImage", b =>
                {
                    b.HasOne("pet_spa_system1.Models.Blog", "Blog")
                        .WithMany("BlogImages")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()

                        .HasConstraintName("FK__Blog_Imag__BlogI__503BEA1C");


                    b.Navigation("Blog");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Cart", b =>
                {
                    b.HasOne("pet_spa_system1.Models.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()

                        .HasConstraintName("FK__Cart__ProductID__282DF8C2");


                    b.HasOne("pet_spa_system1.Models.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()

                        .HasConstraintName("FK__Cart__UserID__2739D489");


                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Order", b =>
                {
                    b.HasOne("pet_spa_system1.Models.StatusOrder", "Status")
                        .WithMany("Orders")
                        .HasForeignKey("StatusId")
                        .IsRequired()

                        .HasConstraintName("FK__Orders__StatusID__1CBC4616");


                    b.HasOne("pet_spa_system1.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()

                        .HasConstraintName("FK__Orders__UserID__1BC821DD");


                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("pet_spa_system1.Models.OrderItem", b =>
                {
                    b.HasOne("pet_spa_system1.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()

                        .HasConstraintName("FK__OrderItem__Order__208CD6FA");


                    b.HasOne("pet_spa_system1.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .IsRequired()

                        .HasConstraintName("FK__OrderItem__Produ__2180FB33");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Payment", b =>
                {
                    b.HasOne("pet_spa_system1.Models.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .IsRequired()

                        .HasConstraintName("FK__Payments__OrderI__3587F3E0");


                    b.HasOne("pet_spa_system1.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentMethodId")
                        .IsRequired()

                        .HasConstraintName("FK__Payments__Paymen__37703C52");


                    b.HasOne("pet_spa_system1.Models.PaymentStatus", "PaymentStatus")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentStatusId")
                        .IsRequired()

                        .HasConstraintName("FK__Payments__Paymen__3864608B");


                    b.HasOne("pet_spa_system1.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .IsRequired()

                        .HasConstraintName("FK__Payments__UserID__367C1819");


                    b.Navigation("Order");

                    b.Navigation("PaymentMethod");

                    b.Navigation("PaymentStatus");

                    b.Navigation("User");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Pet", b =>
                {
                    b.HasOne("pet_spa_system1.Models.Species", "Species")
                        .WithMany("Pets")
                        .HasForeignKey("SpeciesId")

                        .HasConstraintName("FK__Pets__SpeciesID__5812160E");


                    b.HasOne("pet_spa_system1.Models.User", "User")
                        .WithMany("Pets")
                        .HasForeignKey("UserId")
                        .IsRequired()

                        .HasConstraintName("FK__Pets__UserID__571DF1D5");


                    b.Navigation("Species");

                    b.Navigation("User");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Product", b =>
                {
                    b.HasOne("pet_spa_system1.Models.ProductCategory", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .IsRequired()

                        .HasConstraintName("FK__Products__Catego__4D94879B");


                    b.Navigation("Category");
                });

            modelBuilder.Entity("pet_spa_system1.Models.ProductCategory", b =>
                {
                    b.HasOne("pet_spa_system1.Models.ProductCategory", "CateParentNavigation")
                        .WithMany("InverseCateParentNavigation")
                        .HasForeignKey("CateParent")

                        .HasConstraintName("FK__ProductCa__Cate___46E78A0C");

                    b.Navigation("CateParentNavigation");
                });

            modelBuilder.Entity("pet_spa_system1.Models.PromotionProduct", b =>
                {
                    b.HasOne("pet_spa_system1.Models.Product", "Product")
                        .WithMany("PromotionProducts")
                        .HasForeignKey("ProductId")
                        .IsRequired()

                        .HasConstraintName("FK__Promotion__Produ__72C60C4A");


                    b.HasOne("pet_spa_system1.Models.Promotion", "Promotion")
                        .WithMany("PromotionProducts")
                        .HasForeignKey("PromotionId")
                        .IsRequired()

                        .HasConstraintName("FK__Promotion__Promo__71D1E811");


                    b.Navigation("Product");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("pet_spa_system1.Models.PromotionService", b =>
                {
                    b.HasOne("pet_spa_system1.Models.Promotion", "Promotion")
                        .WithMany("PromotionServices")
                        .HasForeignKey("PromotionId")
                        .IsRequired()

                        .HasConstraintName("FK__Promotion__Promo__778AC167");


                    b.HasOne("pet_spa_system1.Models.Service", "Service")
                        .WithMany("PromotionServices")
                        .HasForeignKey("ServiceId")
                        .IsRequired()

                        .HasConstraintName("FK__Promotion__Servi__787EE5A0");


                    b.Navigation("Promotion");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Review", b =>
                {
                    b.HasOne("pet_spa_system1.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)

                        .HasConstraintName("FK__Reviews__Product__40058253");


                    b.HasOne("pet_spa_system1.Models.Service", "Service")
                        .WithMany("Reviews")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)

                        .HasConstraintName("FK__Reviews__Service__40F9A68C");


                    b.HasOne("pet_spa_system1.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()

                        .HasConstraintName("FK__Reviews__UserID__3F115E1A");


                    b.Navigation("Product");

                    b.Navigation("Service");

                    b.Navigation("User");
                });

            modelBuilder.Entity("pet_spa_system1.Models.SerCate", b =>
                {
                    b.HasOne("pet_spa_system1.Models.SerCate", "CateParentNavigation")
                        .WithMany("InverseCateParentNavigation")
                        .HasForeignKey("CateParent")

                        .HasConstraintName("FK__Ser_cate__Cate_p__5DCAEF64");


                    b.Navigation("CateParentNavigation");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Service", b =>
                {
                    b.HasOne("pet_spa_system1.Models.SerCate", "Category")
                        .WithMany("Services")
                        .HasForeignKey("CategoryId")
                        .IsRequired()

                        .HasConstraintName("FK__Services__Catego__6477ECF3");


                    b.Navigation("Category");
                });

            modelBuilder.Entity("pet_spa_system1.Models.User", b =>
                {
                    b.HasOne("pet_spa_system1.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()

                        .HasConstraintName("FK__Users__RoleID__412EB0B6");


                    b.Navigation("Role");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Appointment", b =>
                {
                    b.Navigation("AppointmentPets");

                    b.Navigation("AppointmentServices");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Blog", b =>
                {
                    b.Navigation("BlogImages");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Order", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("pet_spa_system1.Models.PaymentMethod", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("pet_spa_system1.Models.PaymentStatus", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Pet", b =>
                {
                    b.Navigation("AppointmentPets");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("OrderItems");

                    b.Navigation("PromotionProducts");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("pet_spa_system1.Models.ProductCategory", b =>
                {
                    b.Navigation("InverseCateParentNavigation");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Promotion", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("PromotionProducts");

                    b.Navigation("PromotionServices");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("pet_spa_system1.Models.SerCate", b =>
                {
                    b.Navigation("InverseCateParentNavigation");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Service", b =>
                {
                    b.Navigation("AppointmentServices");

                    b.Navigation("PromotionServices");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("pet_spa_system1.Models.Species", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("pet_spa_system1.Models.StatusAppointment", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("pet_spa_system1.Models.StatusOrder", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("pet_spa_system1.Models.User", b =>
                {
                    b.Navigation("AppointmentEmployees");

                    b.Navigation("AppointmentUsers");

                    b.Navigation("BlogApprovedByNavigations");

                    b.Navigation("BlogUsers");

                    b.Navigation("Carts");

                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("Pets");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
