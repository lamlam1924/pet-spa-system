@model pet_spa_system1.ViewModel.AppointmentViewModel
@{
    ViewData["Title"] = "Đặt lịch dịch vụ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="@Url.Content("~/cssjsAppointment/css/appointment-common.css")" />
    <link rel="stylesheet" href="@Url.Content("~/cssjsAppointment/css/toast-custom.css")" />
    <style>
        .add-pet-btn {
            transition: all 0.3s ease;
            border-radius: 20px;
            padding: 6px 16px;
            font-weight: 500;
            font-size: 14px;
            margin-left: 15px;
        }
        
        .add-pet-btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 3px 6px rgba(0, 123, 255, 0.3);
        }
        
        .add-pet-btn i {
            margin-right: 6px;
        }
        
        /* Ensure tabs and button are properly aligned */
        .d-flex.justify-content-between.align-items-center {
            border-bottom: 1px solid #dee2e6;
            padding-bottom: 10px;
        }
        
        .nav-tabs {
            border-bottom: none;
            margin-bottom: 0;
        }
        
        /* Modal styling for add pet */
        #addPetModal .modal-content {
            border-radius: 15px;
            border: none;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        }
        
        #addPetModal .modal-header {
            /* background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); */
            color: white;
            border-radius: 15px 15px 0 0;
            width: 100%;
            margin: auto;
        }
        
        #addPetModal .modal-title {
            font-weight: 600;
        }
        
        #addPetModal .btn-close {
            filter: invert(1);
        }
    </style>
}

<div class="booking-container">
    <div class="step-header">
        <h2 class="mb-4">Đặt Lịch Dịch Vụ</h2>
        <div class="progress-steps">
            <div class="progress-line"></div>
            <div class="step active" data-step="1">
                <div class="step-icon">1</div>
                <div class="step-label">Chọn thú cưng & dịch vụ</div>
            </div>
            <div class="step" data-step="2">
                <div class="step-icon">2</div>
                <div class="step-label">Thông tin đặt lịch</div>
            </div>
            <div class="step" data-step="3">
                <div class="step-icon">3</div>
                <div class="step-label">Xác nhận</div>
            </div>
        </div>
    </div>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <ul>
                @foreach (var modelError in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@modelError.ErrorMessage</li>
                }
            </ul>
        </div>
    }
    
    @if (TempData["SuccessMessage"] != null)
    {
        <input type="hidden" id="successMessage" value="@TempData["SuccessMessage"]" />
    }

    <form method="post" action="@Url.Action("Appointment", "Appointment")" id="appointmentForm">
        @Html.AntiForgeryToken()
        
        <div class="row">
            <div class="col-lg-8">
                <!-- Bước 1: Chọn thú cưng & dịch vụ -->
                <div id="step-1" class="step-content">
                    <!-- Chọn thú cưng -->
                    <div class="form-section mb-4">
                        <h4 class="section-title">Chọn thú cưng</h4>
                        <!-- Tabs for Dog/Cat with Add Pet button -->
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <ul class="nav nav-tabs" id="petTab" role="tablist">
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link active" id="dog-tab" data-bs-toggle="tab" data-bs-target="#dog" type="button" role="tab" aria-controls="dog" aria-selected="true">Chó</button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" id="cat-tab" data-bs-toggle="tab" data-bs-target="#cat" type="button" role="tab" aria-controls="cat" aria-selected="false">Mèo</button>
                                </li>
                            </ul>
                            <a href="#"
                               class="btn btn-success"
                               hx-get="@Url.Action("AddPetPartial", "Appointment")"
                               hx-target="#modal-container"
                               hx-trigger="click"
                               hx-swap="innerHTML">
                                <i class="bi bi-plus-circle"></i> Thêm thú cưng
                            </a>
                        </div>
                        <div class="tab-content" id="petTabContent">
                            <div class="tab-pane fade show active" id="dog" role="tabpanel" aria-labelledby="dog-tab">
                                <div class="pet-grid">
                                    @foreach (var pet in Model.Pets.Where(p => p.Species?.SpeciesName?.ToLower() == "dog"))
                                    {
                                        <div class="pet-card" data-pet-id="@pet.PetId">
                                            <div class="pet-header">
                                                <div class="pet-avatar">
                                                    <i class="fa fa-paw"></i>
                                                </div>
                                                <div class="pet-info">
                                                    <h5>@pet.Name</h5>
                                                    <small>@pet.Breed</small>
                                                </div>
                                                <div class="ms-auto">
                                                    <div class="form-check">
                                                        <input type="checkbox" class="form-check-input pet-checkbox" 
                                                               id="pet-@pet.PetId" name="SelectedPetIds" 
                                                               value="@pet.PetId" 
                                                               @(Model.SelectedPetIds != null && Model.SelectedPetIds.Contains(pet.PetId) ? "checked" : "")>
                                                        <label class="form-check-label" for="pet-@pet.PetId">Chọn</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="tab-pane fade" id="cat" role="tabpanel" aria-labelledby="cat-tab">
                                <div class="pet-grid">
                                    @foreach (var pet in Model.Pets.Where(p => p.Species?.SpeciesName?.ToLower() == "cat"))
                                    {
                                        <div class="pet-card" data-pet-id="@pet.PetId">
                                            <div class="pet-header">
                                                <div class="pet-avatar">
                                                    <i class="fa fa-paw"></i>
                                                </div>
                                                <div class="pet-info">
                                                    <h5>@pet.Name</h5>
                                                    <small>@pet.Breed</small>
                                                </div>
                                                <div class="ms-auto">
                                                    <div class="form-check">
                                                        <input type="checkbox" class="form-check-input pet-checkbox" 
                                                               id="pet-@pet.PetId" name="SelectedPetIds" 
                                                               value="@pet.PetId" 
                                                               @(Model.SelectedPetIds != null && Model.SelectedPetIds.Contains(pet.PetId) ? "checked" : "")>
                                                        <label class="form-check-label" for="pet-@pet.PetId">Chọn</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Chọn dịch vụ -->
                    <div class="form-section mb-4">
                        <h4 class="section-title">Chọn dịch vụ</h4>
                        <!-- Tabs for Service Category -->
                        <ul class="nav nav-tabs mb-3" id="serviceTab" role="tablist">
                            @{
                                // Lấy danh sách category SerCate duy nhất từ các service
                                var categories = Model.Services
                                    .Where(s => s.Category != null)
                                    .Select(s => s.Category)
                                    .Distinct()
                                    .ToList();
                                int catIdx = 0;
                                foreach (var cat in categories)
                                {
                                    var catId = $"cat-{catIdx}";
                                    var catName = cat.Name;
                            <li class="nav-item" role="presentation">
                                <button class="nav-link @(catIdx == 0 ? "active" : "")" id="@catId-tab" data-bs-toggle="tab" data-bs-target="#@catId" type="button" role="tab" aria-controls="@catId" aria-selected="@(catIdx == 0 ? "true" : "false")">@catName</button>
                            </li>
                                    catIdx++;
                                }
                            }
                        </ul>
                        <div class="tab-content" id="serviceTabContent">
                            @{
                                catIdx = 0;
                                foreach (var cat in categories)
                                {
                                    var catId = $"cat-{catIdx}";
                            <div class="tab-pane fade @(catIdx == 0 ? "show active" : "")" id="@catId" role="tabpanel" aria-labelledby="@catId-tab">
                                <div class="service-grid">
                                    @foreach (var service in Model.Services.Where(s => s.Category != null && s.Category.CategoryId == cat.CategoryId))
                                    {
                                        <div class="service-card" data-service-id="@service.ServiceId">
                                            <div class="service-info">
                                                <h5>@service.Name</h5>
                                                <p class="service-description">@service.Description</p>
                                                <div class="service-price">@service.Price.ToString("N0") đ</div>
                                            </div>
                                            <div class="form-check mt-3">
                                                <input type="checkbox" class="form-check-input service-checkbox" 
                                                       id="service-@service.ServiceId" name="SelectedServiceIds" 
                                                       value="@service.ServiceId" 
                                                       data-price="@service.Price"
                                                       @(Model.SelectedServiceIds != null && Model.SelectedServiceIds.Contains(service.ServiceId) ? "checked" : "")>
                                                <label class="form-check-label" for="service-@service.ServiceId">Chọn dịch vụ</label>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                                    catIdx++;
                                }
                            }
                        </div>
                    </div>
                </div>
                
                <!-- Bước 2: Thông tin đặt lịch -->
                <div id="step-2" class="step-content">
                    <div class="form-section mb-4">
                        <h4 class="section-title">Thông tin đặt lịch</h4>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="CustomerName" class="form-label">Họ và tên</label>
                                <input type="text" class="form-control" id="CustomerName" name="CustomerName" 
                                       value="@(string.IsNullOrEmpty(Model.CustomerName) && Model.User != null ? Model.User.FullName : Model.CustomerName)" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="Phone" class="form-label">Số điện thoại</label>
                                <input type="tel" class="form-control" id="Phone" name="Phone" 
                                       value="@(string.IsNullOrEmpty(Model.Phone) && Model.User != null ? Model.User.Phone : Model.Phone)" required>
                            </div>
                            <div class="col-md-12 mb-3">
                                <label for="Email" class="form-label">Email</label>
                                <input type="email" class="form-control" id="Email" name="Email" 
                                       value="@(string.IsNullOrEmpty(Model.Email) && Model.User != null ? Model.User.Email : Model.Email)" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="AppointmentDate" class="form-label">Ngày hẹn</label>
                                <input type="date" class="form-control" id="AppointmentDate" name="AppointmentDate" 
                                       value="@Model.AppointmentDate.ToString("yyyy-MM-dd")" required min="@(DateTime.Now.ToString("yyyy-MM-dd"))">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="AppointmentTime" class="form-label">Giờ hẹn</label>
                                <input type="time" class="form-control" id="AppointmentTime" name="AppointmentTime" 
                                       value="@Model.AppointmentTime.ToString(@"hh\:mm")" required>
                            </div>
                            <div class="col-md-12 mb-3">
                                <label for="Notes" class="form-label">Ghi chú</label>
                                <textarea class="form-control" id="Notes" name="Notes" rows="3">@Model.Notes</textarea>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Bước 3: Xác nhận thông tin -->
                <div id="step-3" class="step-content">
                    <div class="form-section mb-4">
                        <h4 class="section-title">Xác nhận thông tin đặt lịch</h4>
                        <div class="confirmation-info">
                            <div class="row mb-4">
                                <div class="col-md-6">
                                    <h5 class="conf-title">Thông tin khách hàng</h5>
                                    <div class="conf-item">
                                        <span class="conf-label">Họ tên:</span>
                                        <span class="conf-value" id="conf-name"></span>
                                    </div>
                                    <div class="conf-item">
                                        <span class="conf-label">Số điện thoại:</span>
                                        <span class="conf-value" id="conf-phone"></span>
                                    </div>
                                    <div class="conf-item">
                                        <span class="conf-label">Email:</span>
                                        <span class="conf-value" id="conf-email"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <h5 class="conf-title">Thông tin lịch hẹn</h5>
                                    <div class="conf-item">
                                        <span class="conf-label">Ngày hẹn:</span>
                                        <span class="conf-value" id="conf-date"></span>
                                    </div>
                                    <div class="conf-item">
                                        <span class="conf-label">Giờ hẹn:</span>
                                        <span class="conf-value" id="conf-time"></span>
                                    </div>
                                    <div class="conf-item">
                                        <span class="conf-label">Ghi chú:</span>
                                        <span class="conf-value" id="conf-notes"></span>
                                    </div>
                                </div>
                            </div>
                            
                            <h5 class="conf-title">Thú cưng được chọn</h5>
                            <div class="conf-pets mb-4" id="conf-pets"></div>
                            
                            <h5 class="conf-title">Dịch vụ được chọn</h5>
                            <div class="conf-services" id="conf-services"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="appointment-summary">
                    <h4 class="mb-4">Tổng quan đặt lịch</h4>
                    <div class="summary-content">
                        <div class="summary-pets mb-3">
                            <h6>Thú cưng đã chọn</h6>
                            <div id="selectedPetsList"></div>
                        </div>
                        <div class="summary-services mb-3">
                            <h6>Dịch vụ đã chọn</h6>
                            <div id="selectedServicesList"></div>
                        </div>
                        <div class="total-section mt-4">
                            <div class="total-price">
                                Tổng tiền: <span id="totalPrice">0</span> đ
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    
        <div class="navigation-buttons mt-4">
            <button type="button" id="prevBtn" class="btn btn-outline-primary">
                <i class="fa fa-chevron-left"></i> Quay lại
            </button>
            <button type="button" id="nextBtn" class="btn btn-primary">
                Tiếp theo <i class="fa fa-chevron-right"></i>
            </button>
            <button type="submit" id="submitBtn" class="btn btn-success">
                <i class="fa fa-calendar-check"></i> Xác nhận đặt lịch
            </button>
        </div>
    </form>
</div>
<div id="modal-container"></div>
@section Scripts {
    <script src="https://unpkg.com/htmx.org@1.9.10"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="@Url.Content("~/cssjsAppointment/js/appointment-common.js")"></script>
    <script>
        // Đặt min cho input ngày là hôm nay (nếu render lại thì vẫn đúng)
        document.addEventListener('DOMContentLoaded', function() {
            var dateInput = document.getElementById('AppointmentDate');
            var today = new Date();
            var yyyy = today.getFullYear();
            var mm = String(today.getMonth() + 1).padStart(2, '0');
            var dd = String(today.getDate()).padStart(2, '0');
            var minDate = yyyy + '-' + mm + '-' + dd;
            dateInput.setAttribute('min', minDate);
            
            // Add Pet button functionality
            document.getElementById('addPetBtn').addEventListener('click', function() {
                // Get the currently active tab to determine species
                var activeTab = document.querySelector('#petTab .nav-link.active');
                var species = '';
                
                if (activeTab.id === 'dog-tab') {
                    species = 'dog';
                } else if (activeTab.id === 'cat-tab') {
                    species = 'cat';
                }
                
                // Open modal for adding pet directly without confirmation
                openAddPetModal(species);
            });
            
            // Function to open add pet modal
            function openAddPetModal(species) {
                // Create modal HTML
                var modalHtml = `
                    <div class="modal fade" id="addPetModal" tabindex="-1" aria-labelledby="addPetModalLabel" aria-hidden="true">
                        <div class="modal-dialog modal-lg">
                            <div class="modal-content">
                                <div class="modal-header" style="width:100%; margin:auto;">
                                    <h5 class="modal-title" id="addPetModalLabel">Thêm thú cưng mới</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <div class="text-center">
                                        <div class="spinner-border" role="status">
                                            <span class="visually-hidden">Đang tải...</span>
                                        </div>
                                        <p class="mt-2">Đang tải form thêm thú cưng...</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                
                // Remove existing modal if any
                var existingModal = document.getElementById('addPetModal');
                if (existingModal) {
                    existingModal.remove();
                }
                
                // Add modal to body
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                
                // Show modal
                var modal = new bootstrap.Modal(document.getElementById('addPetModal'));
                modal.show();
                
                // Load add pet form
                fetch('@Url.Action("AddPetPartial", "UserHome")')
                    .then(response => response.text())
                    .then(html => {
                        document.querySelector('#addPetModal .modal-body').innerHTML = html;
                        
                        // Set the species dropdown to the selected species if available
                        var speciesDropdown = document.querySelector('#addPetModal select[name="Pet.SpeciesId"]');
                        if (speciesDropdown && species) {
                            // Find the option that matches the species
                            var options = speciesDropdown.querySelectorAll('option');
                            for (var i = 0; i < options.length; i++) {
                                var optionText = options[i].text.toLowerCase();
                                if ((species === 'dog' && optionText.includes('chó')) || 
                                    (species === 'cat' && optionText.includes('mèo'))) {
                                    speciesDropdown.selectedIndex = i;
                                    break;
                                }
                            }
                        }
                    })
                    .catch(error => {
                        console.error('Error loading add pet form:', error);
                        document.querySelector('#addPetModal .modal-body').innerHTML = 
                            '<div class="alert alert-danger">Có lỗi xảy ra khi tải form thêm thú cưng.</div>';
                    });
                
                // Handle form submission in modal
                document.addEventListener('submit', function(e) {
                    if (e.target.closest('#addPetModal')) {
                        e.preventDefault();
                        
                        var form = e.target;
                        var formData = new FormData(form);
                        
                        fetch('@Url.Action("AddPet", "UserHome")', {
                            method: 'POST',
                            body: formData
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Show success message
                                alert(data.message || 'Thêm thú cưng thành công!');
                                
                                // Close modal
                                var modal = bootstrap.Modal.getInstance(document.getElementById('addPetModal'));
                                modal.hide();
                                
                                // Reload the page to refresh pet list
                                window.location.reload();
                            } else {
                                // Show error message
                                alert(data.message || 'Có lỗi xảy ra khi thêm thú cưng.');
                            }
                        })
                        .catch(error => {
                            console.error('Error submitting form:', error);
                            alert('Có lỗi xảy ra khi thêm thú cưng.');
                        });
                    }
                });
            }
        });
    </script>
}