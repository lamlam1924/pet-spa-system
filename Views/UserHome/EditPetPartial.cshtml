@model pet_spa_system1.ViewModel.PetDetailViewModel

<div class="modal fade" id="editPetModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <form id="editPetForm" class="modal-content"
              hx-post="@Url.Action("UpdatePet", "UserHome", new { id = Model.Pet.PetId })"
              hx-target="#response-message"
              hx-swap="innerHTML"
              enctype="multipart/form-data">
            @Html.AntiForgeryToken()
            <div class="modal-header" style="width:95%; margin:auto;">
                <h5 class="modal-title">Chỉnh sửa thú cưng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <div class="row g-3" style="width:95%; margin:auto;">
                    <!-- Form Inputs (Left Column) -->
                    <div class="col-md-7">
                        <input type="hidden" name="Pet.Id" value="@Model.Pet.PetId" />
                        <div class="mb-2">
                            <label for="edit-pet-name" class="form-label">Tên</label>
                            <input type="text" id="edit-pet-name" name="Pet.Name" class="form-control" value="@Model.Pet.Name" required>
                        </div>
                        <div class="mb-2">
                            <label for="edit-pet-species" class="form-label">Loài</label>
                            <select id="edit-pet-species" name="Pet.SpeciesId" class="form-control" required>
                                <option value="">-- Chọn loài --</option>
                                @if (Model.SpeciesList != null)
                                {
                                    foreach (var species in Model.SpeciesList)
                                    {
                                        if (Model.Pet.SpeciesId == species.SpeciesId)
                                        {
                                            <option value="@species.SpeciesId" selected>@species.SpeciesName</option>
                                        }
                                        else
                                        {
                                            <option value="@species.SpeciesId">@species.SpeciesName</option>
                                        }
                                    }
                                }
                                else
                                {
                                    <option value="" disabled>Không có dữ liệu loài</option>
                                }
                            </select>
                        </div>
                        <div class="mb-2">
                            <label for="edit-pet-breed" class="form-label">Giống</label>
                            <input type="text" id="edit-pet-breed" name="Pet.Breed" class="form-control" value="@Model.Pet.Breed" required>
                        </div>
                        <div class="mb-2">
                            <label for="edit-pet-age" class="form-label">Tuổi</label>
                            <input type="number" min="0" id="edit-pet-age" name="Pet.Age" class="form-control" value="@Model.Pet.Age" required>
                        </div>
                        <div class="mb-2">
                            <label for="edit-pet-gender" class="form-label">Giới tính</label>
                            <select id="edit-pet-gender" name="Pet.Gender" class="form-control" required>
                                <option value="">-- Chọn giới tính --</option>
                                @if (Model.Pet.Gender == "Male")
                                {
                                    <option value="Male" selected>Đực</option>
                                    <option value="Female">Cái</option>
                                }
                                else if (Model.Pet.Gender == "Female")
                                {
                                    <option value="Male">Đực</option>
                                    <option value="Female" selected>Cái</option>
                                }
                                else
                                {
                                    <option value="Male">Đực</option>
                                    <option value="Female">Cái</option>
                                }
                            </select>
                        </div>
                        <div class="mb-2">
                            <label for="edit-pet-note" class="form-label">Ghi chú</label>
                            <textarea id="edit-pet-note" name="Pet.SpecialNotes" class="form-control" rows="2">@Model.Pet.SpecialNotes</textarea>
                        </div>
                    </div>

                    <!-- Upload Image (Right Column) -->
                    <div class="col-md-5">
                        <div class="mb-2 text-center">
                            <label for="edit-pet-image" class="form-label">Ảnh thú cưng</label>
                            <input type="file" id="edit-pet-image" name="ImageFile" class="form-control" accept="image/*" onchange="previewEditPetImage(this)">

                            <div class="mt-3 position-relative d-inline-block">
                                <img id="edit-preview-image"
                                     src="@(Model.Pet.PetImages?.FirstOrDefault()?.ImageUrl ?? "")"
                                     class="img-thumbnail @(string.IsNullOrEmpty(Model.Pet.PetImages?.FirstOrDefault()?.ImageUrl) ? "d-none" : "")"
                                     style="width: 180px; height: 180px; object-fit: cover;" alt="Preview">

                                <i id="edit-remove-image-icon"
                                   class="bi bi-x-circle-fill text-danger position-absolute top-0 start-100 translate-middle @(string.IsNullOrEmpty(Model.Pet.PetImages?.FirstOrDefault()?.ImageUrl) ? "d-none" : "")"
                                   role="button" style="font-size: 1.4rem;" onclick="removeEditSelectedImage()"
                                   title="Xóa ảnh đã chọn"></i>
                            </div>

                            <div id="response-message"></div> <!-- Thêm div để hiển thị thông báo -->

                            <p id="edit-no-image-text" class="text-muted fst-italic mt-2 @(string.IsNullOrEmpty(Model.Pet.PetImages?.FirstOrDefault()?.ImageUrl) ? "" : "d-none")">Chưa tải ảnh lên</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button type="submit" class="btn btn-primary">Lưu</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
            </div>
        </form>
    </div>
</div>

<script>
    var modal = new bootstrap.Modal(document.getElementById('editPetModal'));
    modal.show();

    function previewEditPetImage(input) {
        const preview = document.getElementById('edit-preview-image');
        const noImageText = document.getElementById('edit-no-image-text');
        const removeIcon = document.getElementById('edit-remove-image-icon');
        const file = input.files[0];

        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                preview.src = e.target.result;
                preview.classList.remove("d-none");
                removeIcon.classList.remove("d-none");
                noImageText.classList.add("d-none");
            };
            reader.readAsDataURL(file);
        } else {
            removeEditSelectedImage();
        }
    }

    function removeEditSelectedImage() {
        const input = document.getElementById('edit-pet-image');
        const preview = document.getElementById('edit-preview-image');
        const removeIcon = document.getElementById('edit-remove-image-icon');
        const noImageText = document.getElementById('edit-no-image-text');

        input.value = '';
        preview.src = '';
        preview.classList.add('d-none');
        removeIcon.classList.add('d-none');
        noImageText.classList.remove('d-none');
    }

    // Handle Htmx response
    document.body.addEventListener('htmx:afterRequest', function (evt) {
        console.log('Htmx response:', evt.detail.xhr.responseText); // Debug response
        const response = JSON.parse(evt.detail.xhr.responseText);
        const responseMessage = document.getElementById('response-message');
        if (response && response.success) {
            responseMessage.innerHTML = `<div class="alert alert-success">${response.message}</div>`;
            setTimeout(() => {
                bootstrap.Modal.getInstance(document.getElementById('editPetModal')).hide();
                htmx.ajax('GET', '@Url.Action("ListPetPartial", "UserHome")', '#content-main');
            }, 1000);
        } else if (response) {
            responseMessage.innerHTML = `<div class="alert alert-danger">${response.message || 'Có lỗi xảy ra'}</div>`;
        } else {
            responseMessage.innerHTML = `<div class="alert alert-danger">Không nhận được phản hồi từ server</div>`;
        }
    });
</script>