@model pet_spa_system1.ViewModel.PetViewModel

<div class="modal fade" id="editPetModal" tabindex="-1" role="dialog" aria-hidden="true" style="background:rgba(0,0,0,0.2);">
    <div class="modal-dialog modal-lg" role="document">
        <form id="editPetForm" class="modal-content"
              hx-post="@Url.Action("UpdatePet", "UserHome")"
              hx-target="#content-main"
              hx-swap="innerHTML"
              enctype="multipart/form-data">
            <div class="modal-header" style="width:95%; margin:auto;">
                <h5 class="modal-title">Chỉnh sửa thú cưng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="closeEditPetModal()"></button>
            </div>

            <div class="modal-body">
                <div class="row g-3" style="width:95%; margin:auto;">
                    <!-- Left Column -->
                    <div class="col-md-7">
                        <input type="hidden" name="Id" value="@Model.Id" />

                        <div class="mb-2">
                            <label for="edit-pet-name" class="form-label">Tên</label>
                            <input type="text" id="edit-pet-name" name="Name" class="form-control" value="@Model.Name" required>
                        </div>

                        <div class="mb-2">
    <label for="edit-pet-species" class="form-label">Loài</label>
    <select id="edit-pet-species" name="SpeciesId" class="form-control" required>
        <option value="">-- Chọn loài --</option>
                                <option value="1" selected="@(Model.Species.Equals("chó"))">Chó</option>
                                <option value="2" selected="@(Model.Species.Equals("Mèo"))">Mèo</option>

    </select>
</div>


                        <div class="mb-2">
                            <label for="edit-pet-breed" class="form-label">Giống</label>
                            <input type="text" id="edit-pet-breed" name="Breed" class="form-control" value="@Model.Breed" required>
                        </div>

                        <div class="mb-2">
                            <label for="edit-pet-age" class="form-label">Tuổi</label>
                            <input type="number" min="0" id="edit-pet-age" name="Age" class="form-control" value="@Model.Age" required>
                        </div>

                        <div class="mb-2">
                            <label for="edit-pet-gender" class="form-label">Giới tính</label>
                            <select id="edit-pet-gender" name="Gender" class="form-control" required>
                                <option value="">-- Chọn giới tính --</option>
                                <option value="Male" selected="@(Model.Gender == "Male")">Đực</option>
                                <option value="Female" selected="@(Model.Gender == "Female")">Cái</option>

                            </select>
                        </div>

                        <div class="mb-2">
                            <label for="edit-pet-note" class="form-label">Ghi chú</label>
                            <textarea id="edit-pet-note" name="Note" class="form-control" rows="2">@Model.Note</textarea>
                        </div>
                    </div>

                    <!-- Right Column -->
                    <div class="col-md-5">
                        <div class="mb-2 text-center">
                            <label for="edit-pet-image" class="form-label">Ảnh thú cưng</label>
                            <input type="file" id="edit-pet-image" name="ImageFile" class="form-control" accept="image/*" onchange="previewEditPetImage(this)">

                            <div class="mt-3 position-relative d-inline-block">
                                <img id="edit-preview-image"
                                     src="@(string.IsNullOrEmpty(Model.ImageUrl) ? "" : Url.Content(Model.ImageUrl))"
                                     class="img-thumbnail @(string.IsNullOrEmpty(Model.ImageUrl) ? "d-none" : "")"
                                     style="width: 180px; height: 180px; object-fit: cover;" alt="Preview">

                                <i id="edit-remove-image-icon"
                                   class="bi bi-x-circle-fill text-danger position-absolute top-0 start-100 translate-middle @(string.IsNullOrEmpty(Model.ImageUrl) ? "d-none" : "")"
                                   role="button"
                                   style="font-size: 1.4rem;"
                                   onclick="removeEditSelectedImage()"
                                   title="Xóa ảnh đã chọn">
                                </i>
                            </div>

                            <p id="edit-no-image-text" class="text-muted fst-italic mt-2 @(string.IsNullOrEmpty(Model.ImageUrl) ? "" : "d-none")">Chưa tải ảnh lên</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button type="submit" class="btn btn-primary">Lưu</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="closeEditPetModal()">Hủy</button>
            </div>
        </form>
    </div>
</div>

<script>
    function previewEditPetImage(input) {
        const preview = document.getElementById('edit-preview-image');
        const noImageText = document.getElementById('edit-no-image-text');
        const removeIcon = document.getElementById('edit-remove-image-icon');
        const file = input.files[0];

        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                preview.src = e.target.result;
                preview.classList.remove("d-none");
                removeIcon.classList.remove("d-none");
                noImageText.classList.add("d-none");
            };
            reader.readAsDataURL(file);
        } else {
            removeEditSelectedImage();
        }
    }

    function removeEditSelectedImage() {
        const input = document.getElementById('edit-pet-image');
        const preview = document.getElementById('edit-preview-image');
        const removeIcon = document.getElementById('edit-remove-image-icon');
        const noImageText = document.getElementById('edit-no-image-text');

        input.value = '';
        preview.src = '';
        preview.classList.add('d-none');
        removeIcon.classList.add('d-none');
        noImageText.classList.remove('d-none');
    }

    function closeEditPetModal() {
        const modal = document.getElementById('editPetModal');
        if (modal) {
            modal.classList.remove('show');
            modal.style.display = 'none';
            document.body.classList.remove('modal-open');
            setTimeout(() => { modal.remove(); }, 300);
        }
    }
</script>
<script>
    var myModal = new bootstrap.Modal(document.getElementById('editPetModal'));
    myModal.show();
</script>
