@model pet_spa_system1.Models.User
@using pet_spa_system1.Models
@{
    ViewData["Title"] = "Chỉnh Sửa Hồ Sơ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Thêm các liên kết CSS từ Bootstrap và CSS tùy chỉnh -->
<link href="@Url.Content("~/vendorAdmin/fontawesome-free/css/all.min.css")" rel="stylesheet" type="text/css">
<link href="@Url.Content("~/vendorAdmin/bootstrap/css/bootstrap.min.css")" rel="stylesheet" type="text/css">
<link href="@Url.Content("~/cssAdmin/ruang-admin.min.css")" rel="stylesheet">
<style>
    .card {
        border-radius: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border: none;
        background: #fff;
        margin: 20px auto;
    }

    .card-header {
        background: #FF5722;
        color: white;
        border-radius: 15px 15px 0 0;
        padding: 15px;
        text-align: center;
        font-size: 1.5rem;
        font-weight: 600;
    }

    .card-body {
        padding: 20px;
    }

    .form-group {
        margin-bottom: 15px;
    }

        .form-group label {
            font-weight: 500;
            color: #333;
            margin-bottom: 5px;
            display: block;
        }

    .form-control {
        border-radius: 8px;
        border: 1px solid #ddd;
        padding: 10px;
        font-size: 1rem;
        transition: border-color 0.3s ease;
    }

        .form-control:focus {
            border-color: #FF5722;
            box-shadow: 0 0 5px rgba(255, 87, 34, 0.3);
            outline: none;
        }

        .form-control[readonly] {
            background: #f9f9f9;
            color: #555;
        }

    .text-danger {
        font-size: 0.9rem;
        margin-top: 5px;
        display: block;
    }

    .mt-3.text-center {
        margin-top: 20px;
    }

    .btn-success {
        background: #FF5722;
        border: none;
        padding: 10px 25px;
        font-size: 1.1rem;
        border-radius: 8px;
        transition: background 0.3s ease, transform 0.2s ease;
    }

        .btn-success:hover {
            background: #FF7043;
            transform: translateY(-2px);
        }

    .btn-secondary {
        background: #6c757d;
        border: none;
        padding: 10px 25px;
        font-size: 1.1rem;
        border-radius: 8px;
        transition: background 0.3s ease, transform 0.2s ease;
        color: white;
    }

        .btn-secondary:hover {
            background: #5a6268;
            transform: translateY(-2px);
        }

    .alert {
        border-radius: 8px;
        margin-bottom: 15px;
    }
</style>

<h2 class="text-center mb-4">Chỉnh Sửa Hồ Sơ</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">×</span>
        </button>
    </div>
}

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger text-center">
        @ViewBag.ErrorMessage
    </div>
}

@if (ViewBag.ValidationErrors != null)
{
    foreach (var error in ViewBag.ValidationErrors)
    {
        <div class="alert alert-danger text-center">
            @error
        </div>
    }
}

@{
    var currentUser = ViewData["CurrentUser"] as User;
    if (currentUser == null)
    {
        <div class="text-center">
            <p>Bạn cần đăng nhập để chỉnh sửa hồ sơ.</p>
            <a asp-controller="Login" asp-action="Login" class="btn btn-primary">Đăng nhập</a>
        </div>
    }
    else if (currentUser.RoleId != 1 && currentUser.RoleId != 3)
    {
        <div class="text-center">
            <p class="text-danger">Bạn không có quyền chỉnh sửa hồ sơ.</p>
        </div>
    }
    else
    {
        var user = Model ?? currentUser;
        using (Html.BeginForm("EditStaffProfile", "Staff", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <div class="container-fluid">
                <div class="row">
                    <div class="col-12 col-md-8 col-lg-6 mx-auto">
                        <div class="card shadow">
                            <div class="card-header">
                                <h4 class="m-0 font-weight-bold">Chỉnh sửa hồ sơ</h4>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-12">
                                        <input type="hidden" name="RoleId" value="@currentUser.RoleId" />
                                        <input type="hidden" name="Email" value="@currentUser.Email" />
                                        <input type="hidden" name="Username" value="@currentUser.Username" />
                                        <div class="form-group">
                                            <label>Tên đăng nhập</label>
                                            <input class="form-control" readonly value="@currentUser.Username" />
                                        </div>
                                        <div class="form-group">
                                            <label>Email</label>
                                            <input class="form-control" readonly value="@currentUser.Email" />
                                        </div>
                                        <div class="form-group">
                                            <label>Họ và tên</label>
                                            <input name="FullName" class="form-control" value="@user.FullName" />
                                        </div>
                                        <div class="form-group">
                                            <label>Số điện thoại</label>
                                            <input name="Phone" class="form-control" value="@user.Phone" />
                                        </div>
                                        <div class="form-group">
                                            <label>Địa chỉ</label>
                                            <input name="Address" class="form-control" value="@user.Address" />
                                        </div>
                                        <div class="form-group">
                                            <label>URL ảnh đại diện</label>
                                            <input name="ProfilePictureUrl" class="form-control" value="@user.ProfilePictureUrl" />
                                        </div>
                                    </div>
                                </div>
                                <div class="mt-3 text-center">
                                    <button type="submit" class="btn btn-success px-4">💾 Lưu thay đổi</button>
                                    <a asp-action="Profile" class="btn btn-secondary">Quay lại</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
}

@section Scripts {
    <script src="@Url.Content("~/vendorAdmin/jquery/jquery.min.js")"></script>
    <script src="@Url.Content("~/vendorAdmin/bootstrap/js/bootstrap.bundle.min.js")"></script>
    <script src="@Url.Content("~/vendorAdmin/jquery-easing/jquery.easing.min.js")"></script>
    <script src="@Url.Content("~/jsAdmin/ruang-admin.min.js")"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var successMessage = @Html.Raw(Json.Serialize(TempData["SuccessMessage"]));
            var errorMessage = @Html.Raw(Json.Serialize(ViewBag.ErrorMessage));

            if (successMessage) {
                Swal.fire({
                    icon: 'success',
                    title: 'Thành công',
                    text: successMessage,
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '@Url.Action("Profile", "Staff")';
                    }
                });
            }

            if (errorMessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi',
                    text: errorMessage,
                    confirmButtonText: 'OK'
                });
            }

            var validationErrors = @Html.Raw(Json.Serialize(ViewBag.ValidationErrors));
            if (validationErrors && validationErrors.length > 0) {
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi Validation',
                    html: validationErrors.join('<br>'),
                    confirmButtonText: 'OK'
                });
            }
        });
    </script>
}