@{
    ViewData["Title"] = "Payment";
    Layout = "~/Views/Admin/_LayoutAdmin.cshtml"; ; // hoặc đường dẫn layout khác
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="Admin dashboard for Paws & Claws Pet Shop">
    <meta name="author" content="indrijunanda">
    <title>petshop - Payment History</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .badge-pending {
            background-color: #ffc107;
        }

        .badge-preparing {
            background-color: #17a2b8;
        }

        .badge-shipped {
            background-color: #007bff;
        }

        .badge-delivered {
            background-color: #28a745;
        }

        .badge-cancelled {
            background-color: #dc3545;
        }

        .badge-completed {
            background-color: #28a745;
        }

        .badge-failed {
            background-color: #dc3545;
        }

        .badge-refunded {
            background-color: #6c757d;
        }

        .status-filter-btn {
            margin: 2px;
        }

            .status-filter-btn.active {
                box-shadow: 0 0 0 2px #007bff;
            }

        .product-item {
            border-bottom: 1px solid #e9ecef;
            padding: 10px 0;
        }

            .product-item:last-child {
                border-bottom: none;
            }
    </style>
</head>

<body id="page-top">
    <div id="wrapper">
        <div id="content-wrapper" class="d-flex flex-column">
            <div id="content">
                <!-- Container Fluid-->
                <div class="container-fluid" id="container-wrapper">
                    <div class="d-sm-flex align-items-center justify-content-between mb-4">
                        <h1 class="h3 mb-0 text-gray-800">Payment History</h1>
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="./">Home</a></li>
                            <li class="breadcrumb-item"><a href="#">Payments</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Payment History</li>
                        </ol>
                    </div>

                    <!-- Payment History Content -->
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="card shadow">
                                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                    <h6 class="m-0 font-weight-bold text-primary">Payment Management</h6>
                                    <button id="btnAddPayment" class="m-0 float-right btn btn-primary btn-sm" type="button">
                                        Add New Payment <i class="fas fa-plus"></i>
                                    </button>
                                </div>
                                <div class="card-body">
                                    <div class="mb-3">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <input type="text" id="paymentSearch" class="form-control" placeholder="Search by customer name, payment ID, or transaction ID...">
                                            </div>
                                            <div class="col-md-6">
                                                <div class="text-right">
                                                    <button class="btn btn-sm btn-outline-secondary status-filter-btn active" data-status="all">All</button>
                                                    <button class="btn btn-sm btn-outline-warning status-filter-btn" data-status="Pending">Pending</button>
                                                    <button class="btn btn-sm btn-outline-success status-filter-btn" data-status="Completed">Completed</button>
                                                    <button class="btn btn-sm btn-outline-danger status-filter-btn" data-status="Failed">Failed</button>
                                                    <button class="btn btn-sm btn-outline-secondary status-filter-btn" data-status="Refunded">Refunded</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="table-responsive">
                                        <table class="table align-items-center table-flush">
                                            <thead class="thead-light">
                                                <tr>
                                                    <th>Payment ID</th>
                                                    <th>Order ID</th>
                                                    <th>Customer</th>
                                                    <th>Amount</th>
                                                    <th>Payment Method</th>
                                                    <th>Status</th>
                                                    <th>Transaction ID</th>
                                                    <th>Payment Date</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody id="paymentTableBody">
                                                <!-- Data will be populated by JavaScript -->
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- End Payment History Content -->

                </div>
                <!---Container Fluid-->
            </div>
        </div>
    </div>

    <!-- Add Payment Modal -->
    <div class="modal fade" id="addPaymentModal" tabindex="-1" role="dialog" aria-labelledby="addPaymentModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addPaymentModalLabel">Add New Payment</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form id="addPaymentForm">
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="add-order-id">Order ID</label>
                            <input type="number" class="form-control" id="add-order-id" required>
                        </div>
                        <div class="form-group">
                            <label for="add-customer">Customer Name</label>
                            <input type="text" class="form-control" id="add-customer" required>
                        </div>
                        <div class="form-group">
                            <label for="add-amount">Amount</label>
                            <input type="number" class="form-control" id="add-amount" step="0.01" required>
                        </div>
                        <div class="form-group">
                            <label for="add-method">Payment Method</label>
                            <select class="form-control" id="add-method" required>
                                <option value="VNPay">VNPay</option>
                                <option value="Cash">Cash</option>
                                <option value="Credit Card">Credit Card</option>
                                <option value="Bank Transfer">Bank Transfer</option>
                                <option value="Momo">Momo</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="add-status">Status</label>
                            <select class="form-control" id="add-status" required>
                                <option value="Pending">Pending</option>
                                <option value="Completed">Completed</option>
                                <option value="Failed">Failed</option>
                                <option value="Refunded">Refunded</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="add-transaction">Transaction ID</label>
                            <input type="text" class="form-control" id="add-transaction">
                        </div>
                        <div class="form-group">
                            <label for="add-date">Payment Date</label>
                            <input type="datetime-local" class="form-control" id="add-date" required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Add Payment</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Edit Payment Modal -->
    <div class="modal fade" id="editPaymentModal" tabindex="-1" role="dialog" aria-labelledby="editPaymentModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editPaymentModalLabel">Edit Payment</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form id="editPaymentForm">
                    <div class="modal-body">
                        <input type="hidden" id="edit-payment-id">
                        <div class="form-group">
                            <label for="edit-order-id">Order ID</label>
                            <input type="number" class="form-control" id="edit-order-id" required>
                        </div>
                        <div class="form-group">
                            <label for="edit-customer">Customer Name</label>
                            <input type="text" class="form-control" id="edit-customer" required>
                        </div>
                        <div class="form-group">
                            <label for="edit-amount">Amount</label>
                            <input type="number" class="form-control" id="edit-amount" step="0.01" required>
                        </div>
                        <div class="form-group">
                            <label for="edit-method">Payment Method</label>
                            <select class="form-control" id="edit-method" required>
                                <!-- Options will be loaded dynamically -->
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="edit-status">Status</label>
                            <select class="form-control" id="edit-status" required>
                                <!-- Options will be loaded dynamically -->
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="edit-transaction">Transaction ID</label>
                            <input type="text" class="form-control" id="edit-transaction">
                        </div>
                        <div class="form-group">
                            <label for="edit-date">Payment Date</label>
                            <input type="datetime-local" class="form-control" id="edit-date" required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Update Payment</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- View Payment Details Modal -->
    <div class="modal fade" id="viewPaymentModal" tabindex="-1" role="dialog" aria-labelledby="viewPaymentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="viewPaymentModalLabel">Payment Details</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h6 class="font-weight-bold">Payment Information</h6>
                            <p><strong>Payment ID:</strong> <span id="view-payment-id"></span></p>
                            <p><strong>Order ID:</strong> <span id="view-order-id"></span></p>
                            <p><strong>Customer:</strong> <span id="view-customer"></span></p>
                            <p><strong>Payment Method:</strong> <span id="view-method"></span></p>
                            <p><strong>Status:</strong> <span id="view-status-badge"></span></p>
                        </div>
                        <div class="col-md-6">
                            <h6 class="font-weight-bold">Transaction Details</h6>
                            <p><strong>Total Amount:</strong> $<span id="view-total-amount"></span></p>
                            <p><strong>Transaction ID:</strong> <span id="view-transaction"></span></p>
                            <p><strong>Payment Date:</strong> <span id="view-date"></span></p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-12">
                            <h6 class="font-weight-bold">Purchased Products</h6>
                            <div id="view-products-list">
                                <!-- Products will be populated here -->
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="editFromView">Edit Payment</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

    <script>
        let payments = [];
        let currentFilter = 'all';

        // Function to get badge class based on status
        function getStatusBadge(status) {
          const badgeClasses = {
            'Pending': 'badge-pending',
            'Completed': 'badge-completed',
            'Failed': 'badge-failed',
            'Refunded': 'badge-refunded'
          };
          return `<span class="badge ${badgeClasses[status] || ''}">${status}</span>`;
        }

        // Function to render payments
        function renderPayments(filter = '', statusFilter = 'all') {
          const tbody = document.getElementById('paymentTableBody');
          tbody.innerHTML = '';

          let filteredPayments = payments.filter(payment => {
            const matchesSearch = (payment.customerName || '').toLowerCase().includes(filter.toLowerCase()) ||
                                  payment.paymentId.toString().includes(filter) ||
                                  (payment.transactionId || '').toLowerCase().includes(filter.toLowerCase());
            const matchesStatus = statusFilter === 'all' || payment.status === statusFilter;
            return matchesSearch && matchesStatus;
          });

          filteredPayments.forEach(payment => {
            const row = document.createElement('tr');
            row.innerHTML = `
              <td><a href="#" class="view-payment" data-id="${payment.paymentId}">${payment.paymentId}</a></td>
              <td>${payment.orderId}</td>
              <td>${payment.customerName || ''}</td>
              <td>$${payment.amount != null ? payment.amount.toFixed(2) : ''}</td>
              <td>${payment.paymentMethod || ''}</td>
              <td>${getStatusBadge(payment.status || '')}</td>
              <td>${payment.transactionId || 'N/A'}</td>
              <td>${payment.paymentDate ? (new Date(payment.paymentDate)).toLocaleDateString() + ' ' + (new Date(payment.paymentDate)).toLocaleTimeString() : ''}</td>
              <td>
                <button class="btn btn-sm btn-info view-btn" data-id="${payment.paymentId}" title="View Details">
                  <i class="fas fa-eye"></i>
                </button>
                <button class="btn btn-sm btn-primary edit-btn" data-id="${payment.paymentId}" title="Edit">
                  <i class="fas fa-edit"></i>
                </button>
                <button class="btn btn-sm btn-danger delete-btn" data-id="${payment.paymentId}" title="Delete">
                  <i class="fas fa-trash"></i>
                </button>
              </td>
            `;
            tbody.appendChild(row);
          });
        }

        // Load payments from backend
        function loadPayments() {
          $.get('/Payment/GetPayments', function(data) {
            payments = data;
            renderPayments($('#paymentSearch').val(), currentFilter);
          });
        }

        // Initial render
        $(document).ready(function() {
          loadPayments();
        });

        // Search functionality
        document.getElementById('paymentSearch').addEventListener('input', e => {
          renderPayments(e.target.value, currentFilter);
        });

        // Status filter functionality
        document.querySelectorAll('.status-filter-btn').forEach(btn => {
          btn.addEventListener('click', e => {
            document.querySelectorAll('.status-filter-btn').forEach(b => b.classList.remove('active'));
            e.target.classList.add('active');
            currentFilter = e.target.dataset.status;
            const searchValue = document.getElementById('paymentSearch').value;
            renderPayments(searchValue, currentFilter);
          });
        });

        // Add payment functionality
        document.getElementById('btnAddPayment').addEventListener('click', () => {
          document.getElementById('add-date').value = new Date().toISOString().slice(0, 16);
          $('#addPaymentModal').modal('show');
        });

        document.getElementById('addPaymentForm').addEventListener('submit', function(e) {
          e.preventDefault();
          const newPayment = {
            orderId: parseInt(document.getElementById('add-order-id').value),
            customerName: document.getElementById('add-customer').value,
            amount: parseFloat(document.getElementById('add-amount').value),
            paymentMethod: document.getElementById('add-method').value,
            status: document.getElementById('add-status').value,
            transactionId: document.getElementById('add-transaction').value || '',
            paymentDate: document.getElementById('add-date').value
          };
          $.ajax({
            url: '/Payment/AddPayment',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(newPayment),
            success: function() {
              $('#addPaymentModal').modal('hide');
              document.getElementById('addPaymentForm').reset();
              loadPayments();
            },
            error: function() { alert('Add payment failed!'); }
          });
        });

        // View payment details
        document.getElementById('paymentTableBody').addEventListener('click', function(e) {
          if (e.target.closest('.view-btn') || e.target.closest('.view-payment')) {
            const id = parseInt(e.target.closest('.view-btn, .view-payment').dataset.id);
            $.get('/Payment/GetPayment/' + id, function(payment) {
              document.getElementById('view-payment-id').textContent = payment.paymentId;
              document.getElementById('view-order-id').textContent = payment.orderId;
              document.getElementById('view-customer').textContent = payment.customerName || '';
              document.getElementById('view-method').textContent = payment.paymentMethod || '';
              document.getElementById('view-status-badge').innerHTML = getStatusBadge(payment.status || '');
              document.getElementById('view-total-amount').textContent = payment.amount != null ? payment.amount.toFixed(2) : '';
              document.getElementById('view-transaction').textContent = payment.transactionId || 'N/A';
              document.getElementById('view-date').textContent = payment.paymentDate ? (new Date(payment.paymentDate)).toLocaleString() : '';
              // Nếu có products thì render, còn không thì để trống
              document.getElementById('view-products-list').innerHTML = '<em>No product details available.</em>';
              document.getElementById('editFromView').dataset.id = payment.paymentId;
              $('#viewPaymentModal').modal('show');
            });
          }
        });

        // Edit from view modal
        document.getElementById('editFromView').addEventListener('click', function(e) {
          const id = parseInt(e.target.dataset.id);
          $('#viewPaymentModal').modal('hide');
          setTimeout(function() {
            $.get('/Payment/GetPayment/' + id, function(payment) {
              document.getElementById('edit-payment-id').value = payment.paymentId;
              document.getElementById('edit-order-id').value = payment.orderId;
              document.getElementById('edit-customer').value = payment.customerName || '';
              document.getElementById('edit-amount').value = payment.amount;
              // Load danh sách và chọn đúng giá trị
              loadPaymentMethods(payment.paymentMethod);
              loadPaymentStatuses(payment.status);
              document.getElementById('edit-transaction').value = payment.transactionId || '';
              document.getElementById('edit-date').value = payment.paymentDate ? payment.paymentDate.slice(0, 16) : '';
              $('#editPaymentModal').modal('show');
            });
          }, 300);
        });

        // Edit payment functionality
        document.getElementById('paymentTableBody').addEventListener('click', function(e) {
          if (e.target.closest('.edit-btn')) {
            const id = parseInt(e.target.closest('.edit-btn').dataset.id);
            $.get('/Payment/GetPayment/' + id, function(payment) {
              document.getElementById('edit-payment-id').value = payment.paymentId;
              document.getElementById('edit-order-id').value = payment.orderId;
              document.getElementById('edit-customer').value = payment.customerName || '';
              document.getElementById('edit-amount').value = payment.amount;
              document.getElementById('edit-method').value = payment.paymentMethod || '';
              document.getElementById('edit-status').value = payment.status || '';
              document.getElementById('edit-transaction').value = payment.transactionId || '';
              document.getElementById('edit-date').value = payment.paymentDate ? payment.paymentDate.slice(0, 16) : '';
              $('#editPaymentModal').modal('show');
            });
          }
        });

        document.getElementById('editPaymentForm').addEventListener('submit', function(e) {
          e.preventDefault();
          const id = parseInt(document.getElementById('edit-payment-id').value);
          const updatedPayment = {
            paymentId: id,
            orderId: parseInt(document.getElementById('edit-order-id').value),
            customerName: document.getElementById('edit-customer').value,
            amount: parseFloat(document.getElementById('edit-amount').value),
            paymentMethod: document.getElementById('edit-method').value,
            status: document.getElementById('edit-status').value,
            transactionId: document.getElementById('edit-transaction').value || '',
            paymentDate: document.getElementById('edit-date').value
          };
          $.ajax({
            url: '/Payment/UpdatePayment',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(updatedPayment),
            success: function() {
              $('#editPaymentModal').modal('hide');
              loadPayments();
            },
            error: function() { alert('Update payment failed!'); }
          });
        });

        // Delete payment functionality
        document.getElementById('paymentTableBody').addEventListener('click', function(e) {
          if (e.target.closest('.delete-btn')) {
            const id = parseInt(e.target.closest('.delete-btn').dataset.id);
            if (confirm('Are you sure you want to delete this payment?')) {
              $.post('/Payment/DeletePayment?id=' + id, function() {
                loadPayments();
              }).fail(function() { alert('Delete payment failed!'); });
            }
          }
        });

        function loadPaymentMethods(selectedValue) {
            $.get('/Payment/GetPaymentMethods', function(data) {
                var $select = $('#edit-method');
                $select.empty();
                data.forEach(function(item) {
                    $select.append(`<option value="${item.MethodName}" ${item.MethodName === selectedValue ? 'selected' : ''}>${item.MethodName}</option>`);
                });
            });
        }
        function loadPaymentStatuses(selectedValue) {
            $.get('/Payment/GetPaymentStatuses', function(data) {
                var $select = $('#edit-status');
                $select.empty();
                data.forEach(function(item) {
                    $select.append(`<option value="${item.StatusName}" ${item.StatusName === selectedValue ? 'selected' : ''}>${item.StatusName}</option>`);
                });
            });
        }
    </script>

</body>
</html>