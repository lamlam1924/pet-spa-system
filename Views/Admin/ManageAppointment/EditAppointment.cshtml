@model pet_spa_system1.ViewModel.AppointmentViewModel

@{
    ViewData["Title"] = "Chỉnh sửa lịch hẹn #" + Model.AppointmentId;
    Layout = "~/Views/Admin/_LayoutAdmin.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/cssjsAppointment/css/appointment-detail.css"/>
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet"/>
}


<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3 class="m-0 fw-bold">
            <i class="fas fa-calendar-alt me-2"></i> Chỉnh sửa lịch hẹn #@Model.AppointmentId
        </h3>
        <div class="d-flex gap-2">
            <a href="@Url.Action("List", "AdminAppointment")" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-1"></i>Quay lại danh sách
            </a>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <form asp-action="Edit" asp-controller="AdminAppointment" method="post" class="needs-validation" novalidate>
        <input type="hidden" asp-for="AppointmentId"/>
        <div class="row g-4">
            <div class="col-lg-8">
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-white">
                        <h5 class="m-0 fw-bold">Thông tin lịch hẹn</h5>
                    </div>
                    <div class="card-body">
                        <div class="row g-3 mb-4">
                            <div class="col-md-6">
                                <label for="AppointmentDate" class="form-label">Ngày & giờ hẹn</label>
                                <input asp-for="AppointmentDate" class="form-control" type="datetime-local"/>
                                <span asp-validation-for="AppointmentDate" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label for="Notes" class="form-label">Ghi chú</label>
                                <textarea asp-for="Notes" class="form-control" rows="2"></textarea>
                                <span asp-validation-for="Notes" class="text-danger"></span>
            </div>
            <div class="col-md-6">
                <label for="StatusId" class="form-label">Trạng thái</label>
                <select asp-for="StatusId" class="form-select">
                    @if (Model.Statuses != null)
                    {
                        foreach (var status in Model.Statuses)
                        {
                            if (status.StatusId == Model.StatusId)
                            {
                                <option value="@status.StatusId" selected>@status.StatusName</option>
                            }
                            else
                            {
                                <option value="@status.StatusId">@status.StatusName</option>
                            }
                        }
                    }
                </select>
                <span asp-validation-for="StatusId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="row g-3">
                            <div class="col-md-6">
                                <div class="card shadow-sm mb-4">
                                    <div class="card-header bg-white">
                                        <h5 class="m-0 fw-bold">Thú cưng</h5>
                                    </div>
                                    <div class="card-body">
                                        <label for="SelectedPetIds" class="form-label">Chọn thú cưng</label>
                                        <select asp-for="SelectedPetIds" class="form-select select2-pet w-100" multiple style="width:100%">
                                            @if (Model.SelectedPets != null)
                                            {
                                                foreach (var pet in Model.SelectedPets)
                                                {
                                                    <option value="@pet.PetId" selected>@pet.Name</option>
                                                }
                                            }
                                        </select>
                                        <span asp-validation-for="SelectedPetIds" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="card shadow-sm mb-4">
                                    <div class="card-header bg-white">
                                        <h5 class="m-0 fw-bold">Dịch vụ</h5>
                                    </div>
                                    <div class="card-body">
                                        <label for="SelectedServiceIds" class="form-label">Chọn dịch vụ</label>
                                        <select asp-for="SelectedServiceIds" class="form-select select2-service w-100" multiple style="width:100%">
                                            @if (Model.SelectedServices != null)
                                            {
                                                foreach (var service in Model.SelectedServices)
                                                {
                                                    <option value="@service.ServiceId" selected>@service.Name</option>
                                                }
                                            }
                                        </select>
                                        <span asp-validation-for="SelectedServiceIds" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-white">
                        <h5 class="m-0 fw-bold">Khách hàng</h5>
                    </div>
                    <div class="card-body">
                        <label for="CustomerId" class="form-label">Chọn khách hàng</label>
                        <select asp-for="CustomerId" class="form-select select2-user w-100" style="width:100%">
                            @if (Model.CustomerId > 0 && !string.IsNullOrEmpty(Model.CustomerName))
                            {
                                <option value="@Model.CustomerId" selected>@Model.CustomerName</option>
                            }
                            <option value="">-- Chọn khách hàng --</option>
                        </select>
                        <span asp-validation-for="CustomerId" class="text-danger"></span>
                        <div id="customer-preview" class="mt-3"></div>
                    </div>
                </div>
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-white">
                        <h5 class="m-0 fw-bold">Phân công nhân viên cho từng thú cưng</h5>
                    </div>
                    <div class="card-body">
                        <div id="pet-staff-assign-table"></div>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary w-100 mt-2">Lưu thay đổi</button>
            </div>
        </div>
    </form>

    <!-- Modal xóa -->
    <div class="modal fade" id="deleteModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Xác nhận xóa</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Bạn có chắc chắn muốn xóa lịch hẹn #@Model.AppointmentId?</p>
                    <p class="text-danger small">Lưu ý: Hành động này không thể hoàn tác!</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <form asp-action="Delete" asp-controller="AdminAppointment" method="post">
                        <input type="hidden" name="id" value="@Model.AppointmentId"/>
                        <button type="submit" class="btn btn-danger">Xóa</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/cssjsAppointment/js/appointment-detail.js"></script>
    <script src="~/cssjsAppointment/js/pet-staff-assign.js"></script>
    <script>
        // Truyền dữ liệu staff, pet, assignment từ Razor xuống JS
        window.PET_STAFF_ASSIGN_STAFFS = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Staffs));
        window.PET_STAFF_ASSIGN_PETS = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.SelectedPets));
        window.PET_STAFF_ASSIGN_ASSIGNMENTS = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.PetStaffAssignments));
    </script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script>
        function loadPetsForCustomer(customerId, selectedPetIds) {
            if (!customerId) {
                $('.select2-pet').empty().trigger('change');
                return;
            }
            $.get('/AdminAppointment/SearchPets', {userId: customerId})
                .done(function (data) {
                    var options = [];
                    if (data && data.results) {
                        options = data.results.map(function (pet) {
                            return new Option(pet.text, pet.id, false, selectedPetIds && selectedPetIds.includes(pet.id));
                        });
                    }
                    $('.select2-pet').empty();
                    options.forEach(function (opt) {
                        $('.select2-pet').append(opt);
                    });
                    $('.select2-pet').trigger('change');
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    alert('Không thể tải danh sách thú cưng! Lỗi: ' + jqXHR.status + ' ' + errorThrown);
                });
        }

        $(document).ready(function () {
            function renderUserCard(user, type) {
                if (!user) return '';
                var color = type === 'staff' ? 'info' : 'primary';
                return `
                <div class="card shadow-sm mb-2">
                    <div class="card-header bg-white py-2">
                        <h6 class="m-0 fw-bold">${type === 'staff' ? 'Nhân viên phụ trách' : 'Khách hàng'}</h6>
                    </div>
                    <div class="card-body">
                        <div class="d-flex mb-2">
                            <div class="flex-shrink-0 me-3">
                                <div class="bg-${color} text-white rounded-circle text-center" style="width: 48px; height: 48px; line-height: 48px; font-size: 1.2rem;">
                                    ${user.fullName ? user.fullName.charAt(0) : '?'}
                                </div>
                            </div>
                        </div>
                        <div class="mb-1">
                            <i class="fas fa-phone-alt me-2 text-${color}"></i>
                            <a href="tel:${user.phone || ''}" class="text-decoration-none">${user.phone || 'Chưa cập nhật'}</a>
                        </div>
                        <div class="mb-1">
                            <i class="fas fa-envelope me-2 text-${color}"></i>
                            <a href="mailto:${user.email || ''}" class="text-decoration-none">${user.email || 'Chưa cập nhật'}</a>
                        </div>
                        ${user.address ? `<div class="mb-1"><i class="fas fa-map-marker-alt me-2 text-${color}"></i>${user.address}</div>` : ''}
                    </div>
                </div>`;
            }

            function fetchUserInfo(userId, type) {
                if (!userId) {
                    $(type === 'staff' ? '#staff-preview' : '#customer-preview').html('');
                    return;
                }
                $.get('/AdminAppointment/GetUserInfo', {id: userId}, function (data) {
                    var html = renderUserCard(data, type);
                    $(type === 'staff' ? '#staff-preview' : '#customer-preview').html(html);
                });
            }

            $.fn.select2.defaults.set('width', 'resolve');
            $('.select2-user').select2({
                placeholder: 'Tìm khách hàng theo tên, SĐT, email',
                allowClear: true,
                minimumInputLength: 0,
                ajax: {
                    url: '/AdminAppointment/SearchCustomers',
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {term: params.term};
                    },
                    processResults: function (data) {
                        return {results: data.results};
                    },
                    cache: true
                }
            });
            $('.select2-staff').select2({
                placeholder: 'Tìm nhân viên theo tên, SĐT, email',
                allowClear: true,
                minimumInputLength: 0,
                ajax: {
                    url: '/AdminAppointment/SearchStaffs',
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {term: params.term};
                    },
                    processResults: function (data) {
                        return {results: data.results};
                    },
                    cache: true
                }
            });
            $('.select2-pet').select2({
                placeholder: 'Chọn/thêm thú cưng',
                allowClear: true,
                minimumInputLength: 0,
                ajax: {
                    url: function () {
                        var userId = $('[name="CustomerId"]').val();
                        return '/AdminAppointment/SearchPets?userId=' + (userId || '');
                    },
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {term: params.term};
                    },
                    processResults: function (data) {
                        return {results: data.results};
                    },
                    cache: true
                }
            });
            $('.select2-service').select2({
                placeholder: 'Chọn/thêm dịch vụ',
                allowClear: true,
                minimumInputLength: 0,
                ajax: {
                    url: '/AdminAppointment/SearchServices',
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {term: params.term};
                    },
                    processResults: function (data) {
                        return {results: data.results};
                    },
                    cache: true
                }
            });
            $('.select2-user').on('change', function () {
                var userId = $(this).val();
                fetchUserInfo(userId, 'customer');
                loadPetsForCustomer(userId, []);
                setTimeout(function () {
                    $('.select2-pet').select2('open');
                }, 200);
            });
            var initCustomerId = $('[name="CustomerId"]').val();
            var initSelectedPetIds = [];
            try {
                initSelectedPetIds = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.SelectedPetIds ?? new List<int>()));
            } catch (e) {
            }
            if (initCustomerId) {
                loadPetsForCustomer(initCustomerId, initSelectedPetIds);
            }
            $('.select2-staff').on('change', function () {
                var staffId = $(this).val();
                fetchUserInfo(staffId, 'staff');
            });
            // Hiển thị preview khách hàng khi vào trang Edit nếu đã có CustomerId
            var initCustomerIdForPreview = $('[name="CustomerId"]').val();
            if (initCustomerIdForPreview) fetchUserInfo(initCustomerIdForPreview, 'customer');
            var initStaffId = $('[name="StaffId"]').val();
            if (initStaffId) fetchUserInfo(initStaffId, 'staff');
        });
    </script>
}