@model pet_spa_system1.ViewModel.AppointmentListViewModel
@Html.AntiForgeryToken()
@{
    ViewData["Title"] = "Danh sách lịch hẹn";
    Layout = "~/Views/Admin/_LayoutAdmin.cshtml";
}



<div class="container-fluid py-4">
    <div class="d-flex flex-wrap justify-content-between align-items-center mb-4">
        <h3 class="mb-0 fw-bold">
            Danh sách lịch hẹn
        </h3>
        <div class="d-flex gap-2">
            <a href="@Url.Action("Calendar", "AdminAppointment")" class="btn btn-outline-secondary">
                Xem dạng lịch
            </a>
            <a href="@Url.Action("Create", "AdminAppointment")" class="btn btn-primary">
                Tạo lịch mới
            </a>
        </div>
    </div>

    <!-- Tìm kiếm và bộ lọc -->
    <div class="filter-section mb-4">
        <div class="search-box">
            <i class="fas fa-search search-icon"></i>
            <input type="text" id="search-input" class="form-control" placeholder="Tìm kiếm...">
            <button class="btn-clear" type="button" style="display:none"><i class="fas fa-times"></i></button>
        </div>
        <div>
            <select id="status-filter" class="form-select">
                <option value="">Tất cả trạng thái</option>
                @foreach (var status in Model.StatusList)
                {
                    <option value="@status.StatusId">@status.StatusName</option>
                }
            </select>
        </div>
        <div>
            <input type="date" id="date-filter" class="form-control" placeholder="Ngày hẹn">
        </div>
        <div>
            <select id="employee-filter" class="form-select">
                <option value="">Tất cả nhân viên</option>
                <option value="1">Nguyễn Văn A</option>
                <option value="2">Trần Thị B</option>
            </select>
        </div>
        <div>
            <button id="btn-reset-filter" class="btn btn-outline-secondary w-100">
                <i class="fas fa-sync-alt me-1"></i>Đặt lại
            </button>
        </div>
    </div>

    <div class="table-card">
        <div class="table-responsive">
            <table class="table table-hover align-middle mb-0" id="appointment-table">
                <thead>
                        <tr>
                            <th class="ps-3">ID</th>
                            <th>
                                <a href="#" class="text-dark d-flex align-items-center sort-link">
                                    Khách hàng <i class="fas fa-sort ms-1 text-muted small"></i>
                                </a>
                            </th>
                            <th>Thú cưng & Nhân viên phụ trách</th>
                            <th>Dịch vụ</th>
                            <th>
                                <a href="#" class="text-dark d-flex align-items-center sort-link">
                                    Thời gian <i class="fas fa-sort ms-1 text-muted small"></i>
                                </a>
                            </th>
                            <th>Trạng thái</th>
                            <th class="text-end">Tổng tiền</th>
                            <th class="text-center pe-3">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in Model.Appointments.OrderByDescending(x => x.AppointmentDate))
                    {
                        var inactive = item.IsActive.HasValue && !item.IsActive.Value;
                        <tr class="@(inactive ? "table-secondary text-muted" : "")">
                            <td class="ps-3 fw-medium">@item.AppointmentId</td>
                            <td>
                                <div class="d-flex flex-column">
                                    <span class="fw-medium">@item.User?.FullName</span>
                                    <span class="text-muted small">@item.User?.Phone</span>
                                </div>
                            </td>
                            <td>
                                <ul class="list-unstyled mb-0">
                                    @if (item.AppointmentPets != null)
                                    {
                                        foreach (var pet in item.AppointmentPets)
                                        {
                                            <li class="mb-1">
                                                @if (pet.Pet.Species != null)
                                                {
                                                    <span class="badge rounded-pill badge-pet bg-light text-dark" data-bs-toggle="tooltip" title="Loài: @pet.Pet.Species">
                                                        @pet.Pet.Name
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge rounded-pill badge-pet bg-light text-dark">
                                                        @pet.Pet.Name
                                                    </span>
                                                }

                                                @if (pet.Staff != null)
                                                {
                                                    <small class="ms-1 text-primary">
                                                        <i class="fas fa-user-md me-1"></i>@pet.Staff.FullName
                                                    </small>
                                                }
                                            </li>
                                        }
                                    }
                                </ul>
                            </td>
                            <td>
                                <ul class="list-unstyled mb-0">
                                    @if (item.AppointmentServices != null)
                                    {
                                        foreach (var service in item.AppointmentServices)
                                        {
                                            <li><span class="badge rounded-pill badge-service bg-light text-dark" data-bs-toggle="tooltip" title="@service.Service.Description">@service.Service.Name</span></li>
                                        }
                                    }
                                </ul>
                            </td>
                            <td class="time-col">
                                <div class="d-flex flex-column">
                                    <span>@item.AppointmentDateTime.ToString("dd/MM/yyyy")</span>
                                    <span class="text-muted small">@item.AppointmentDateTime.ToString("HH:mm")</span>
                                </div>
                            </td>
                            <td class="status-col">
                                <span class="badge badge-status status-@item.StatusId" data-statusid="@item.StatusId" style="font-size:1em;min-width:120px;">
                                    <span class="status-icon"></span> @(item.Status != null ? item.Status.StatusName : "")
                                </span>
                            </td>

                            <td class="text-end">
                                <span class="total-price">
                                    @item.AppointmentServices.Sum(s => s.Service.Price).ToString("N0") đ
                                </span>
                            </td>
                            <td class="text-center pe-3">
                                <div class="action-buttons">
                                    <a class="btn btn-outline-primary @(inactive ? "disabled" : "")" title="Xem chi tiết" href="@Url.Action("Detail", "AdminAppointment", new { id = item.AppointmentId })" tabindex="@(inactive ? -1 : 0)">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a class="btn btn-outline-success @(inactive ? "disabled" : "")" title="Chỉnh sửa" href="@Url.Action("Edit", "AdminAppointment", new { id = item.AppointmentId })" tabindex="@(inactive ? -1 : 0)">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    @if (!inactive)
                                    {
                                        <button class="btn btn-outline-danger btn-delete-appointment" title="Xóa" data-id="@item.AppointmentId">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    }
                                    else
                                    {
                                        <button type="button" class="btn btn-outline-success btn-restore-appointment" title="Khôi phục" data-id="@item.AppointmentId">
                                            <i class="fas fa-undo"></i>
                                        </button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer bg-white">
            <nav>
                @{
                    int currentPage = ViewBag.CurrentPage ?? 1;
                    int totalPages = ViewBag.TotalPages ?? 1;
                }
                <ul class="pagination justify-content-center m-0">
                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("List", new { page = currentPage - 1 })"><i class="fas fa-chevron-left"></i></a>
                    </li>
                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("List", new { page = i })">@i</a>
                        </li>
                    }
                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("List", new { page = currentPage + 1 })"><i class="fas fa-chevron-right"></i></a>
                    </li>
                </ul>
            </nav>
        </div>

<!-- Modal duyệt lịch & gán nhân viên -->
<div class="modal fade" id="approveAssignModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="approveAssignForm" method="post" action="@Url.Action("ApproveAndAssign", "AdminAppointment")">
                <div class="modal-header">
                    <h5 class="modal-title">Duyệt lịch & Gán nhân viên</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="approveAssignAppointmentId" name="AppointmentId" />
                    <div class="mb-3">
                        <label for="employeeSelect" class="form-label">Chọn nhân viên thực hiện</label>
                        <select class="form-select" id="employeeSelect" name="EmployeeId" required>
                            <option value="">-- Chọn nhân viên --</option>
                            @foreach (var emp in Model.EmployeeList)
                            {
                            <option value="@emp.UserId">@emp.FullName</option>
                            }
                        </select>
                    </div>
                    <div class="form-check mb-2">
                        <input class="form-check-input" type="checkbox" value="true" id="sendEmailConfirm" name="SendEmail" checked>
                        <label class="form-check-label" for="sendEmailConfirm">
                            Gửi email xác nhận cho khách hàng
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-info">Duyệt & Gán nhân viên</button>
                </div>
            </form>
        </div>
    </div>
</div>
    </div>



@section Scripts {
    <script src="~/cssjsappointment/js/appointment-list.js"></script>
    <script>
        // Native JS toast
        function showToast(msg, type = 'info', duration = 3000) {
            var toast = document.createElement('div');
            toast.className = 'simple-toast simple-toast-' + type;
            toast.innerHTML = msg;
            document.body.appendChild(toast);
            setTimeout(function () {
                toast.style.opacity = '0';
                setTimeout(function () { toast.remove(); }, 400);
            }, duration);
        }

        // Hiển thị toast từ TempData
        document.addEventListener('DOMContentLoaded', function () {
            var successMsg = @((TempData["SuccessMessage"] != null) ? Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(TempData["SuccessMessage"].ToString())) : "null");
            var errorMsg = @((TempData["ErrorMessage"] != null) ? Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(TempData["ErrorMessage"].ToString())) : "null");
            if (successMsg !== null) {
                showToast(successMsg, 'success');
            }
            if (errorMsg !== null) {
                showToast(errorMsg, 'error');
            }
        });

        // Gán dữ liệu vào modal khi click nút duyệt/gán
        $('#approveAssignModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var appointmentId = button.data('id');
            var employeeId = button.data('employee');
            var modal = $(this);
            modal.find('#approveAssignAppointmentId').val(appointmentId);
            modal.find('#employeeSelect').val(employeeId);
        });

        // Xóa lịch hẹn bằng native toast xác nhận và AJAX
        $(document).on('click', '.btn-delete-appointment', function () {
            var id = $(this).data('id');
            var confirmBox = document.createElement('div');
            confirmBox.className = 'simple-toast simple-toast-warning';
            confirmBox.innerHTML = '<div>Bạn có chắc chắn muốn ẩn lịch hẹn này không?<br><small class="text-danger">Lưu ý: Lịch hẹn sẽ được ẩn (xóa mềm) và có thể khôi phục lại bất cứ lúc nào.</small></div><div class="mt-2"><button type="button" class="btn btn-danger btn-confirm-delete" data-id="' + id + '">Xác nhận ẩn</button> <button type="button" class="btn btn-secondary btn-cancel-delete">Hủy</button></div>';
            document.body.appendChild(confirmBox);
            confirmBox.querySelector('.btn-confirm-delete').onclick = function () {
                var delId = this.getAttribute('data-id');
                var token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                $.post('/AdminAppointment/DeleteAppointment', { id: delId, __RequestVerificationToken: token })
                    .done(function (res) {
                        confirmBox.remove();
                        showToast(res.message || 'Đã ẩn lịch hẹn thành công!', 'success');
                        setTimeout(function () { location.reload(); }, 1200);
                    })
                    .fail(function (xhr) {
                        confirmBox.remove();
                        var msg = xhr.responseJSON && xhr.responseJSON.message ? xhr.responseJSON.message : 'Có lỗi xảy ra khi ẩn lịch hẹn!';
                        showToast(msg, 'error');
                    });
            };
            confirmBox.querySelector('.btn-cancel-delete').onclick = function () {
                confirmBox.remove();
            };
        });

        // Khôi phục lịch hẹn bằng native toast xác nhận và AJAX
        $(document).on('click', '.btn-restore-appointment', function () {
            var id = $(this).data('id');
            var confirmBox = document.createElement('div');
            confirmBox.className = 'simple-toast simple-toast-info';
            confirmBox.innerHTML = '<div>Bạn có muốn khôi phục lịch hẹn này?</div><div class="mt-2"><button type="button" class="btn btn-success btn-confirm-restore" data-id="' + id + '">Khôi phục</button> <button type="button" class="btn btn-secondary btn-cancel-restore">Hủy</button></div>';
            document.body.appendChild(confirmBox);
            confirmBox.querySelector('.btn-confirm-restore').onclick = function () {
                var restoreId = this.getAttribute('data-id');
                $.post('/AdminAppointment/RestoreAppointment', { id: restoreId })
                    .done(function (res) {
                        confirmBox.remove();
                        showToast(res.message || 'Khôi phục lịch hẹn thành công!', 'success');
                        setTimeout(function () { location.reload(); }, 1200);
                    })
                    .fail(function (xhr) {
                        confirmBox.remove();
                        var msg = xhr.responseJSON && xhr.responseJSON.message ? xhr.responseJSON.message : 'Có lỗi xảy ra khi khôi phục lịch hẹn!';
                        showToast(msg, 'error');
                    });
            };
            confirmBox.querySelector('.btn-cancel-restore').onclick = function () {
                confirmBox.remove();
            };
        });
    </script>
}

@section Styles {
    <link rel="stylesheet" href="~/cssjsappointment/css/appointment-list.css" />
}