@using pet_spa_system1.Models
@using System.Text.Json
@using System.Linq
@model List<pet_spa_system1.Models.Product>
@{
    ViewData["Title"] = "Product List";
    Layout = "~/Views/Admin/_LayoutAdmin.cshtml"; ; // hoặc đường dẫn layout khác
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="Admin dashboard for Paws & Claws Pet Shop">
    <meta name="author" content="indrijunanda">
    <link href="@Url.Content("~/imgAdmin/logo/pet-logo.png")" rel="icon">
    <title>petshop - Product List</title>
    <link href="@Url.Content("~/vendorAdmin/fontawesome-free/css/all.min.css")" rel="stylesheet" type="text/css">
    <link href="@Url.Content("~/vendorAdmin/bootstrap/css/bootstrap.min.css")" rel="stylesheet" type="text/css">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="@Url.Content("~/cssAdmin/ruang-admin.min.css")" rel="stylesheet">
</head>

<body id="page-top">
    <div id="wrapper">
        <!-- Sidebar -->
        <!-- Sidebar -->
        <div id="content-wrapper" class="d-flex flex-column">
            <div id="content">
                <!-- Topbar -->
            
                <!-- Topbar -->
                <!-- Container Fluid-->
                <div class="container-fluid" id="container-wrapper">
                    <div class="d-sm-flex align-items-center justify-content-between mb-4">
                        <h1 class="h3 mb-0 text-gray-800">Product List</h1>
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="@Url.Content("~/Admin/Index")">Home</a></li>
                            <li class="breadcrumb-item"><a href="@Url.Content("~/Admin/Products_List")">Products</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Product List</li>
                        </ol>
                    </div>

                    <!-- Product List Content -->
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="card shadow">
                                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                    <div class="input-group mb-0" style="max-width: 400px;">
                                        <input type="text" class="form-control" id="productSearchInput" placeholder="Search products..." aria-label="Search products">
                                        <div class="input-group-append">
                                            <button class="btn btn-primary" type="button" id="btnProductSearch">
                                                <i class="fas fa-search"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <script>
                                        document.addEventListener("DOMContentLoaded", function () {
                                            const searchInput = document.getElementById("productSearchInput");
                                            const searchBtn = document.getElementById("btnProductSearch");

                                            function filterProducts() {
                                                const filter = searchInput.value.toLowerCase();
                                                document.querySelectorAll("table tbody tr").forEach(function (row) {
                                                    const name = row.children[1]?.textContent.toLowerCase() || "";
                                                    const category = row.children[2]?.textContent.toLowerCase() || "";
                                                    if (name.includes(filter) || category.includes(filter)) {
                                                        row.style.display = "";
                                                    } else {
                                                        row.style.display = "none";
                                                    }
                                                });
                                            }

                                            searchInput.addEventListener("keyup", function (e) {
                                                if (e.key === "Enter") filterProducts();
                                            });
                                            searchBtn.addEventListener("click", filterProducts);
                                        });
                                    </script>
                                    <a href="@Url.Content("~/Admin/Add_New_Product")" id="btnAddProduct" class="m-0 float-right btn btn-primary btn-sm" type="button">
                                        Add New Product <i class="fas fa-plus"></i>
                                    </a>
                                </div>
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table align-items-center table-flush">
                                            <thead class="thead-light">
                                                <tr>
                                                    <th>ID</th>
                                                    <th>Tên Sản phẩm</th>
                                                    <th>Phân loại</th>
                                                    <th>Giá</th>
                                                    <th>Số lượng</th>
                                                    <th>Ngày tạo</th>
                                                    <th>Trạng thái</th>
                                                    <th>Hành động</th>
                                                </tr>
                                            </thead>
                                            <tbody>

                                                @foreach (var item in Model)
                                                {
                                                    @Html.AntiForgeryToken()
                                                    <tr data-description="@item.Description" data-categoryid="@item.CategoryId">
                                                        <td><button class="btn btn-link btn-sm btn-product-id" data-productid="@item.ProductId">@item.ProductId</button></td>
                                                        <td>@item.Name</td>
                                                        <td>@(item.ProductCategory?.Name ?? "No Category")</td>
                                                        <td>@item.Price.ToString("N0") đ</td>
                                                        <td>@item.Stock</td>
                                                        <td>@(item.CreatedAt?.ToString("dd/MM/yyyy") ?? "N/A")</td>
                                                        @if (item.IsActive == true)
                                                        {
                                                            <td><span class="badge badge-success">Active</span></td>
                                                        }
                                                        else
                                                        {
                                                            <td><span class="badge badge-danger">Inactive</span></td>
                                                        }
                                                        <td>
                                                            <div class="btn-group" role="group">
                                                                <a href="@Url.Action("Edit_Products", "Admin", new { id = item.ProductId })" class="btn btn-primary btn-sm">Sửa</a>
                                                                @if (item.IsActive == true)
                                                                {
                                                                    <button class="btn btn-danger btn-sm btn-delete" data-productid="@item.ProductId">Xóa</button>
                                                                }
                                                                else{
                                                                    <button class="btn btn-danger btn-sm btn-enable" data-productid="@item.ProductId" >↺</button>
                                                                }
                                                              
                                                            </div>


                                                            @* <a href="@Url.Action("Product_Detail", "Admin", new { productID = item.ProductId })" class="btn btn-info btn-sm btn-detail">Chi Tiết</a> *@
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                        @{
                                            var totalPages = ViewBag.TotalPages ?? 0;
                                            var currentPage = ViewBag.CurrentPage ?? 1;

                                            int maxPagesToShow = 5;
                                            int startPage = Math.Max(1, currentPage - 2);
                                            int endPage = Math.Min(totalPages, currentPage + 2);

                                            if (currentPage <= 3)
                                            {
                                                startPage = 1;
                                                endPage = Math.Min(5, totalPages);
                                            }
                                            else if (currentPage >= totalPages - 2)
                                            {
                                                startPage = Math.Max(1, totalPages - 4);
                                                endPage = totalPages;
                                            }
                                        }

                                        <div class="col-12 pb-1">
                                            <nav aria-label="Page navigation">
                                                <ul class="pagination justify-content-center mb-3">

                                                    <!-- Trang đầu -->
                                                    <li class="page-item @(currentPage > 1 ? "" : "disabled")">
                                                        <a class="page-link" href="@Url.Action("Products_List", new { page = 1 })">Trang đầu</a>
                                                    </li>

                                                    <!-- Trang trước -->
                                                    <li class="page-item @(currentPage > 1 ? "" : "disabled")">
                                                        <a class="page-link" href="@Url.Action("Products_List", new { page = currentPage - 1 })">«</a>
                                                    </li>

                                                    <!-- Hiển thị dấu ... nếu cần -->
                                                    @if (startPage > 1)
                                                    {
                                                        <li class="page-item disabled"><span class="page-link">...</span></li>
                                                    }

                                                    <!-- Các trang hiển thị -->
                                                    @for (int i = startPage; i <= endPage; i++)
                                                    {
                                                        <li class="page-item @(i == currentPage ? "active" : "")">
                                                            <a class="page-link" href="@Url.Action("Products_List", new { page = i })">@i</a>
                                                        </li>
                                                    }

                                                    <!-- Hiển thị dấu ... nếu cần -->
                                                    @if (endPage < totalPages)
                                                    {
                                                        <li class="page-item disabled"><span class="page-link">...</span></li>
                                                    }

                                                    <!-- Trang sau -->
                                                    <li class="page-item @(currentPage < totalPages ? "" : "disabled")">
                                                        <a class="page-link" href="@Url.Action("Products_List", new { page = currentPage + 1 })">»</a>
                                                    </li>

                                                    <!-- Trang cuối -->
                                                    <li class="page-item @(currentPage < totalPages ? "" : "disabled")">
                                                        <a class="page-link" href="@Url.Action("Products_List", new { page = totalPages })">Trang cuối</a>
                                                    </li>

                                                </ul>
                                            </nav>
                                        </div>


                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>

                    @* <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
                        <div class="modal-dialog modal-lg modal-dialog-centered">
                            <div class="modal-content shadow-lg border-0 rounded-3">
                                <form id="editForm">
                                    <div class="modal-header bg-primary text-white">
                                        <h5 class="modal-title" id="editModalLabel">Chỉnh sửa sản phẩm</h5>
                                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Đóng"></button>
                                    </div>

                                    <div class="modal-body px-4 py-3">
                                        <input type="hidden" id="edit-id" />

                                        <div class="mb-3">
                                            <label for="edit-category" class="form-label">Danh mục</label>
                                            <select id="edit-category" class="form-select" name="CategoryId" required>
                                                @{
                                                    var categories = Model
                                                    .Where(p => p.ProductCategory != null)
                                                    .Select(p => p.ProductCategory)
                                                    .DistinctBy(c => c.CategoryId)
                                                    .ToList();
                                                }
                                                @foreach (var category in categories)
                                                {
                                                    <option value="@category.CategoryId">@category.Name</option>
                                                }
                                            </select>
                                        </div>

                                        <div class="mb-3">
                                            <label for="edit-name" class="form-label">Tên sản phẩm</label>
                                            <input type="text" id="edit-name" class="form-control" name="Name" required />
                                        </div>

                                        <div class="mb-3">
                                            <label for="edit-description" class="form-label">Mô tả</label>
                                            <textarea id="edit-description" class="form-control" name="Description" rows="3"></textarea>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-6 mb-3">
                                                <label for="edit-price" class="form-label">Giá</label>
                                                <input type="number" step="0.01" min="0" id="edit-price" class="form-control" name="Price" required />
                                            </div>

                                            <div class="col-md-6 mb-3">
                                                <label for="edit-stock" class="form-label">Số lượng trong kho</label>
                                                <input type="number" min="0" id="edit-stock" class="form-control" name="Stock" required />
                                            </div>
                                        </div>
                                    </div>

                                    <div class="modal-footer px-4 pb-3">
                                        <button type="submit" class="btn btn-primary px-4">💾 Lưu</button>
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div> *@


                </div>
                <!---Container Fluid-->
            </div>
            <!-- Footer -->
            <!-- Footer -->
        </div>
    </div>

    <!-- Scroll to top -->
    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>

    <script src="@Url.Content("~/vendorAdmin/jquery/jquery.min.js")"></script>
    <script src="@Url.Content("~/vendorAdmin/bootstrap/js/bootstrap.bundle.min.js")"></script>
    <script src="@Url.Content("~/vendorAdmin/jquery-easing/jquery.easing.min.js")"></script>
    <script src="@Url.Content("~/jsAdmin/ruang-admin.min.js")"></script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Bắt sự kiện xóa
            document.querySelectorAll('.btn-delete').forEach(function (btn) {
                btn.addEventListener('click', function () {
                    const productId = this.dataset.productid;

                    Swal.fire({
                        title: 'Bạn có chắc?',
                        text: "Bạn có chắc muốn Ngưng kích hoạt sản phẩm này?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'OK',
                        cancelButtonText: 'Hủy'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Tạo form để submit POST
                            const form = document.createElement('form');
                            form.method = 'POST';
                            form.action = '/Admin/DeleteProduct';

                            const input = document.createElement('input');
                            input.type = 'hidden';
                            input.name = 'id';
                            input.value = productId;

                            // Thêm anti-forgery token nếu có
                            const token = document.querySelector('input[name="__RequestVerificationToken"]');
                            if (token) {
                                const clone = token.cloneNode();
                                form.appendChild(clone);
                            }

                            form.appendChild(input);
                            document.body.appendChild(form);
                            form.submit();
                        }
                    });
                });
            });

            // Bắt sự kiện kích hoạt lại
            document.querySelectorAll('.btn-enable').forEach(function (btn) {
                btn.addEventListener('click', function () {
                    const productId = this.dataset.productid;

                    Swal.fire({
                        title: 'Bạn có chắc?',
                        text: "Bạn có chắc muốn Kích hoạt sản phẩm này?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'OK',
                        cancelButtonText: 'Hủy'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Tạo form để submit POST
                            const form = document.createElement('form');
                            form.method = 'POST';
                            form.action = '/Admin/EnableProduct';

                            const input = document.createElement('input');
                            input.type = 'hidden';
                            input.name = 'id';
                            input.value = productId;

                            // Thêm anti-forgery token nếu có
                            const token = document.querySelector('input[name="__RequestVerificationToken"]');
                            if (token) {
                                const clone = token.cloneNode();
                                form.appendChild(clone);
                            }

                            form.appendChild(input);
                            document.body.appendChild(form);
                            form.submit();
                        }
                    });
                });
            });

            // Hiển thị thông báo nếu có
            var successMessage = @Html.Raw(JsonSerializer.Serialize(TempData["SuccessMessage"]));
            if (successMessage) {
                Swal.fire({
                    icon: 'success',
                    title: 'Thành công',
                    text: successMessage,
                    timer: 2000,
                    showConfirmButton: false
                });
            }
        });
    </script>

</body>

</html>