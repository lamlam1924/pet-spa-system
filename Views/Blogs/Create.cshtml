@model pet_spa_system1.ViewModel.BlogCreateViewModel
@{
    ViewData["Title"] = "Tạo Blog Mới";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <!-- Summernote CSS -->
    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-bs4.min.css" rel="stylesheet">
    <style>
        .blog-create-container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 20px;
        }

        .form-section {
            background: white;
            border-radius: 10px;
            padding: 25px;
            margin-bottom: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .section-title {
            color: #2563eb;
            font-weight: 600;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #e5e7eb;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            font-weight: 500;
            color: #374151;
            margin-bottom: 8px;
        }

        .form-control {
            border-radius: 8px;
            border: 1px solid #d1d5db;
            padding: 12px 15px;
            font-size: 14px;
            min-height: 45px;
            pointer-events: auto !important; /* Đảm bảo không bị chặn */
        }

            .form-control:focus {
                border-color: #2563eb;
                box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
            }

        select.form-control {
            height: 45px;
            line-height: 1.5;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 12px center;
            background-repeat: no-repeat;
            background-size: 16px 12px;
            padding-right: 40px;
            appearance: none;
        }

        .image-upload-area {
            border: 2px dashed #d1d5db;
            border-radius: 8px;
            padding: 30px;
            text-align: center;
            background: #f9fafb;
            transition: all 0.3s;
            cursor: pointer;
            position: relative;
        }

            .image-upload-area:hover {
                border-color: #2563eb;
                background: #eff6ff;
            }

            .image-upload-area.dragover {
                border-color: #2563eb;
                background: #dbeafe;
            }

        .upload-icon {
            font-size: 48px;
            color: #9ca3af;
            margin-bottom: 15px;
        }

        .btn-primary {
            background: #2563eb;
            border: none;
            border-radius: 8px;
            padding: 12px 30px;
            font-weight: 500;
        }

        .btn-secondary {
            background: #6b7280;
            border: none;
            border-radius: 8px;
            padding: 12px 30px;
            font-weight: 500;
        }

        .btn-outline-primary {
            border: 2px solid #2563eb;
            color: #2563eb;
            border-radius: 8px;
            padding: 10px 28px;
            font-weight: 500;
        }

        .status-options {
            display: flex;
            gap: 20px;
            flex-wrap: wrap;
        }

        .status-option {
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 10px 15px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s;
        }

            .status-option:hover {
                border-color: #2563eb;
                background: #eff6ff;
            }

            .status-option input[type="radio"]:checked + .status-label {
                color: #2563eb;
                font-weight: 600;
            }

            .status-option input[type="radio"]:checked {
                accent-color: #2563eb;
            }

        .preview-area {
            display: none;
            border: 1px solid #e5e7eb;
            border-radius: 8px;
            padding: 20px;
            background: #f9fafb;
        }

        .action-buttons {
            display: flex;
            gap: 15px;
            justify-content: flex-end;
            flex-wrap: wrap;
        }

        /* Fix Summernote */
        .note-editor {
            border: 1px solid #d1d5db;
            border-radius: 8px;
        }

        .note-toolbar {
            background: #f9fafb;
            border-bottom: 1px solid #e5e7eb;
        }

        .note-editing-area {
            background: white;
        }

        /* Prevent duplicate editor */
        #contentEditor + .note-editor {
            display: block !important; /* Đảm bảo editor hiển thị */
        }

        /* Loading and alert styles */
        .alert {
            margin-top: 10px;
            border-radius: 8px;
        }

        .alert-dismissible .btn-close {
            padding: 0.75rem 1rem;
        }

        .fa-spinner {
            animation: spin 1s linear infinite;
        }

        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Prevent form breaking during loading */
        .form-group {
            position: relative;
        }

        .form-group .alert {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            z-index: 1000;
        }

        /* Prevent form breaking during errors */
        .blog-create-container {
            min-height: 100vh;
            position: relative;
        }

        .form-section {
            position: relative;
            z-index: 1;
        }

        /* Error handling styles */
        .alert {
            margin-top: 10px;
            border-radius: 8px;
            word-wrap: break-word;
            max-width: 100%;
        }

        .alert-danger {
            background-color: #f8d7da;
            border-color: #f5c6cb;
            color: #721c24;
        }

        .alert-success {
            background-color: #d4edda;
            border-color: #c3e6cb;
            color: #155724;
        }

        .alert-info {
            background-color: #d1ecf1;
            border-color: #bee5eb;
            color: #0c5460;
        }

        @@media (max-width: 768px) {
            .blog-create-container {
                padding: 10px;
            }

            .action-buttons {
                justify-content: center;
            }

            .status-options {
                justify-content: center;
            }
        }
    </style>
}

<div class="bradcam_area breadcam_bg">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="bradcam_text text-center">
                    <h3>Tạo Blog Mới</h3>
                    <p>Chia sẻ kiến thức và kinh nghiệm của bạn</p>
                </div>
            </div>
        </div>
    </div>
</div>

<section class="blog-create-section section-padding">
    <div class="container">
        <div class="blog-create-container">
            <form asp-action="Create" method="post" enctype="multipart/form-data" id="blogForm">
                @Html.AntiForgeryToken()

                <!-- Basic Information -->
                <div class="form-section">
                    <h4 class="section-title">
                        <i class="fas fa-edit"></i> Thông Tin Cơ Bản
                    </h4>

                    <div class="form-group">
                        <label asp-for="Title" class="form-label">Tiêu đề bài viết *</label>
                        <input asp-for="Title" class="form-control" placeholder="Nhập tiêu đề hấp dẫn cho bài viết của bạn..." />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Category" class="form-label">Danh mục</label>
                        <select asp-for="Category" class="form-control">
                            <option value="">-- Chọn danh mục --</option>
                            @foreach (var category in Model.AvailableCategories)
                            {
                                <option value="@category">@category</option>
                            }
                            <option value="Chăm sóc thú cưng">Chăm sóc thú cưng</option>
                            <option value="Sức khỏe">Sức khỏe</option>
                            <option value="Dinh dưỡng">Dinh dưỡng</option>
                            <option value="Huấn luyện">Huấn luyện</option>
                            <option value="Kinh nghiệm">Kinh nghiệm</option>
                        </select>
                    </div>
                </div>

                <!-- Content -->
                <div class="form-section">
                    <h4 class="section-title">
                        <i class="fas fa-align-left"></i> Nội Dung Bài Viết
                    </h4>
                    <div class="form-group">
                        <label>Từ khóa để sinh nội dung tự động:</label>
                        <div class="input-group mb-2">
                            <input type="text" id="keywordInput" class="form-control" placeholder="VD: huấn luyện chó con đi vệ sinh đúng chỗ">
                            <div class="input-group-append">
                                <button type="button" class="btn btn-success" id="generateContentBtn">
                                    <i class="fas fa-magic"></i> Tạo nội dung tự động
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="Content" class="form-label">Nội dung *</label>
                        <textarea asp-for="Content" id="contentEditor" class="form-control" rows="15" placeholder="Viết nội dung bài viết của bạn tại đây..."></textarea>
                        <span asp-validation-for="Content" class="text-danger"></span>
                    </div>
                </div>

                <!-- Additional Images -->
                <div class="form-section">
                    <h4 class="section-title">
                        <i class="fas fa-images"></i> Hình Ảnh Bổ Sung
                    </h4>

                    <div class="form-group">
                        <input asp-for="AdditionalImages" type="file" class="form-control" multiple accept="image/*">
                        <small class="form-text text-muted">Có thể chọn nhiều hình ảnh cùng lúc</small>
                    </div>
                </div>

                <!-- Status -->
                <div class="form-section">
                    <h4 class="section-title">
                        <i class="fas fa-cog"></i> Trạng Thái Xuất Bản
                    </h4>

                    <div class="status-options">
                        <label class="status-option">
                            <input type="radio" asp-for="Status" value="Published">
                            <span class="status-label">
                                <i class="fas fa-globe"></i> Xuất bản ngay
                            </span>
                        </label>
                    </div>
                    <small class="form-text text-muted mt-2">
                        <i class="fas fa-info-circle"></i>
                        Lưu ý: Blog của khách hàng sẽ cần được duyệt trước khi xuất bản
                    </small>
                </div>

                <!-- Action Buttons -->
                <div class="form-section">
                    <div class="action-buttons">
                        <button type="button" class="btn btn-outline-primary" id="previewBtn">
                            <i class="fas fa-eye"></i> Xem trước
                        </button>

                        <button type="submit" class="btn btn-primary" name="submitType" value="publish">
                            <i class="fas fa-paper-plane"></i> Xuất bản
                        </button>
                    </div>
                </div>

                <!-- Preview Area -->
                <div class="preview-area" id="previewArea">
                    <h4>Xem trước bài viết</h4>
                    <div id="previewContent"></div>
                </div>
            </form>
        </div>
    </div>
</section>

@section Scripts {
    <!-- Summernote JS -->
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-bs4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/lang/summernote-vi-VN.min.js"></script>

    <script>
        $(document).ready(function() {
            // Global variable to track content generation state
            let isGeneratingContent = false;

            // Debug: Kiểm tra jQuery và Summernote
            console.log('jQuery loaded:', typeof jQuery !== 'undefined');
            console.log('Summernote loaded:', typeof $.summernote !== 'undefined');
            console.log('Document ready executed');

            // Check if elements exist
            console.log('Content editor exists:', $('#contentEditor').length > 0);
            console.log('Generate button exists:', $('#generateContentBtn').length > 0);
            console.log('Keyword input exists:', $('#keywordInput').length > 0);

            // Khởi tạo Summernote với kiểm tra lỗi
            if (typeof $.summernote !== 'undefined') {
                $('#contentEditor').summernote({
                    height: 400,
                    lang: 'vi-VN',
                    toolbar: [
                        ['style', ['style']],
                        ['font', ['bold', 'italic', 'underline', 'clear']],
                        ['fontname', ['fontname']],
                        ['fontsize', ['fontsize']],
                        ['color', ['color']],
                        ['para', ['ul', 'ol', 'paragraph']],
                        ['table', ['table']],
                        ['insert', ['link', 'picture', 'video']],
                        ['view', ['fullscreen', 'codeview', 'help']]
                    ],
                    placeholder: 'Viết nội dung bài viết của bạn tại đây...',
                    focus: true,
                    callbacks: {
                        onInit: function() {
                            console.log('Summernote initialized');
                        },
                        onImageUpload: function(files) {
                            for (let i = 0; i < files.length; i++) {
                                uploadImageToEditor(files[i]);
                            }
                        },
                        onChange: function(contents, $editable) {
                            // Tự động chuyển URL YouTube thành iframe
                            const youtubeRegex = /(https?:\/\/)?(www\.)?(youtube\.com\/watch\?v=|youtu\.be\/)([\w-]{11})(?:\?[^"]*)?/gi;
                            let updatedContent = contents;
                            updatedContent = updatedContent.replace(youtubeRegex, function(match, p1, p2, p3, videoId) {
                                const embedUrl = `https://www.youtube.com/embed/${videoId}`;
                                return `<iframe width="560" height="315" src="${embedUrl}" frameborder="0" allowfullscreen></iframe>`;
                            });
                            if (updatedContent !== contents) {
                                $('#contentEditor').summernote('code', updatedContent);
                                $('#Content').val(updatedContent); // Cập nhật model
                            }
                        }
                    }
                }).on('summernote.change', function(we, contents, $editable) {
                    // Cập nhật model khi nội dung thay đổi
                    $('#Content').val(contents);
                });
            } else {
                console.error('Summernote not loaded, falling back to textarea');
                $('#contentEditor').removeAttr('id').addClass('form-control').attr('rows', '15');
                
                // Add fallback for generate content
                $('#generateContentBtn').click(function() {
                    showToast('Trình soạn thảo không khả dụng. Vui lòng nhập nội dung thủ công.', 'warning');
                });
            }

            // Preview functionality
            $('#previewBtn').click(function() {
                const title = $('#Title').val();
                const content = $('#contentEditor').summernote('code') || $('#Content').val();
                const category = $('#Category').val();

                if (!title || !content) {
                    showToast('Vui lòng nhập tiêu đề và nội dung trước khi xem trước.', 'warning');
                    return;
                }

                $('#previewContent').html(`
                    <div class="blog-preview">
                        <h2>${title}</h2>
                        ${category ? `<span class="badge badge-primary mb-3">${category}</span>` : ''}
                        <div class="content">${content}</div>
                    </div>
                `);

                $('#previewArea').slideToggle();
            });

            // Form submission
            $('#blogForm').submit(function(e) {
                try {
                    // Prevent submission if generating content
                    if (isGeneratingContent) {
                        e.preventDefault();
                        showToast('Vui lòng chờ quá trình tạo nội dung hoàn tất.', 'warning');
                        return false;
                    }

                    const content = $('#contentEditor').summernote('code') || $('#Content').val();
                    if (!content || content.trim() === '<p><br></p>' || content.trim() === '') {
                        e.preventDefault();
                        showToast('Vui lòng nhập nội dung bài viết.', 'warning');
                        return false;
                    }
                    $('#Content').val(content); // Đảm bảo giá trị được gửi đi
                    
                    console.log('Form submitted successfully');
                } catch (error) {
                    console.error('Error in form submission:', error);
                    e.preventDefault();
                    showToast('Có lỗi xảy ra khi gửi form: ' + error.message, 'error');
                    return false;
                }
            });
            
            // Define uploadImageToEditor function inside document ready
            function uploadImageToEditor(file) {
                if (!file.type.match('image.*')) {
                    showToast('Vui lòng chọn file hình ảnh!', 'warning');
                    return;
                }
                if (file.size > 5 * 1024 * 1024) {
                    showToast('File quá lớn! Vui lòng chọn file nhỏ hơn 5MB.', 'warning');
                    return;
                }

                const reader = new FileReader();
                reader.onload = function(e) {
                    $('#contentEditor').summernote('insertImage', e.target.result);
                };
                reader.readAsDataURL(file);
            }
            
            // Generate content functionality
            $('#generateContentBtn').click(function () {
                try {
                    console.log('Generate content button clicked');
                    
                    const keyword = $('#keywordInput').val().trim();
                    if (!keyword) {
                        showToast("Vui lòng nhập từ khóa.", "warning");
                        return;
                    }

                    // Prevent multiple clicks
                    if (isGeneratingContent) {
                        console.log('Already generating content, ignoring click');
                        return;
                    }

                    isGeneratingContent = true;
                    console.log('Starting content generation for keyword:', keyword);

                    // Disable button and show loading
                    const $btn = $('#generateContentBtn');
                    const originalText = $btn.html();
                    $btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Đang tạo...');
                    
                    // Show loading indicator
                    const $loadingIndicator = $('<div class="alert alert-info">Đang tạo nội dung, vui lòng chờ...</div>');
                    $btn.closest('.form-group').after($loadingIndicator);
                    
                    fetch('/Blogs/GenerateBlogContent', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        body: JSON.stringify(keyword)
                    })
                    .then(response => {
                        console.log('Response status:', response.status);
                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log('Response data:', data);
                        $loadingIndicator.remove();
                        
                        if (data.success && data.content) {
                            let rawContent = data.content;

                            // Nếu có dấu ```html thì cắt bỏ
                            if (rawContent.includes("```html")) {
                                rawContent = rawContent.split("```html")[1]?.split("```")[0]?.trim() || rawContent;
                            }

                            // Nếu có dấu ``` thì cắt bỏ
                            if (rawContent.includes("```")) {
                                rawContent = rawContent.split("```")[1]?.split("```")[0]?.trim() || rawContent;
                            }

                            // Kiểm tra nếu nội dung không rỗng
                            if (rawContent && rawContent.trim() !== '') {
                                // Gán vào editor và input ẩn
                                $('#contentEditor').summernote('code', rawContent);
                                $('#Content').val(rawContent);
                                
                                // Hiển thị thông báo thành công
                                const $successMsg = $('<div class="alert alert-success alert-dismissible fade show">Nội dung đã được tạo thành công!</div>');
                                $btn.closest('.form-group').after($successMsg);
                                
                                // Tự động ẩn thông báo sau 3 giây
                                setTimeout(() => {
                                    $successMsg.fadeOut();
                                }, 3000);
                                
                                console.log('Content generated successfully');
                            } else {
                                throw new Error('Nội dung trả về rỗng');
                            }
                        } else {
                            throw new Error(data.message || 'Không thể tạo nội dung.');
                        }
                    })
                    .catch(err => {
                        console.error('Error in content generation:', err);
                        $loadingIndicator.remove();
                        
                        // Hiển thị thông báo lỗi
                        const $errorMsg = $('<div class="alert alert-danger alert-dismissible fade show">Lỗi: ' + err.message + '</div>');
                        $btn.closest('.form-group').after($errorMsg);
                        
                        // Tự động ẩn thông báo sau 5 giây
                        setTimeout(() => {
                            $errorMsg.fadeOut();
                        }, 5000);
                    })
                    .finally(() => {
                        // Restore button state
                        $btn.prop('disabled', false).html(originalText);
                        isGeneratingContent = false;
                        console.log('Content generation completed');
                    });
                } catch (error) {
                    console.error('Unexpected error in generate content:', error);
                    showToast('Có lỗi không mong muốn xảy ra: ' + error.message, 'error');
                    isGeneratingContent = false;
                }
            });
        });
    </script>
}

<!-- Validation Scripts -->
@section ValidationScripts {
    <partial name="_ValidationScriptsPartial" />
}