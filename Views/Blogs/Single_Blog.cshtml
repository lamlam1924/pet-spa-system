@model pet_spa_system1.ViewModel.BlogDetailViewModel
@{
    ViewData["Title"] = Model.Blog.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <style>
        .blog-detail-container {
            margin-top: 30px;
        }

        .blog-meta {
            color: #666;
            font-size: 14px;
            margin-bottom: 20px;
        }

            .blog-meta i {
                margin-right: 5px;
            }

        .blog-content {
            line-height: 1.8;
            font-size: 16px;
        }

            .blog-content img {
                max-width: 100%;
                height: auto;
                margin: 20px 0;
            }

        .like-section {
            margin: 30px 0;
            text-align: center;
        }

        .like-btn {
            background: none;
            border: 2px solid #e74c3c;
            color: #e74c3c;
            padding: 10px 20px;
            border-radius: 25px;
            cursor: pointer;
            transition: all 0.3s;
        }

            .like-btn.liked {
                background: #e74c3c;
                color: white;
            }

            .like-btn:hover {
                background: #e74c3c;
                color: white;
            }

            .like-btn.disabled-btn {
                background: #ccc !important;
                cursor: not-allowed !important;
                pointer-events: none !important;
            }

        .comments-section {
            margin-top: 50px;
        }

        .comment-form {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 10px;
            margin-bottom: 40px;
        }

        .comment-item {
            border-bottom: 1px solid #eee;
            padding: 20px 0;
        }

            .comment-item:last-child {
                border-bottom: none;
            }

        .comment-author {
            font-weight: bold;
            color: #333;
        }

        .comment-date {
            color: #666;
            font-size: 12px;
        }

        .comment-content {
            margin: 10px 0;
            line-height: 1.6;
        }

        .reply-btn {
            background: none;
            border: none;
            color: #007bff;
            cursor: pointer;
            font-size: 12px;
        }

        .reply-form {
            margin-top: 15px;
            padding-left: 40px;
            display: none;
        }

        .comment-replies {
            margin-left: 40px;
            border-left: 2px solid #eee;
            padding-left: 20px;
        }

        .author-badge {
            background: #007bff;
            color: white;
            font-size: 10px;
            padding: 2px 6px;
            border-radius: 3px;
            margin-left: 5px;
        }

        .employee-badge {
            background: #28a745; /* Thay 'staff-badge' bằng 'employee-badge' */
        }

        .related-blogs {
            margin-top: 50px;
        }

        .related-blog-item {
            margin-bottom: 20px;
        }

            .related-blog-item img {
                width: 100%;
                height: 200px;
                object-fit: cover;
                border-radius: 5px;
            }

        .comment-item.highlight {
            background-color: #e8f5e8;
            border-left: 4px solid #28a745;
            padding-left: 15px;
            transition: all 0.3s ease;
        }

        .new-comment {
            animation: slideIn 0.5s ease-out;
        }

        @@keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
}

<!-- Breadcrumb -->
<div class="bradcam_area breadcam_bg">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="bradcam_text text-center">
                    <h3>@Model.Blog.Title</h3>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb justify-content-center">
                            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Trang chủ</a></li>
                            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Blogs")">Blog</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Chi tiết</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Blog Detail Area -->
<section class="blog_area single-post-area section-padding">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 posts-list">
                <div class="single-post">
                    @if (!string.IsNullOrEmpty(Model.Blog.FeaturedImageUrl))
                    {
                        <div class="feature-img">
                            <img class="img-fluid" src="@Model.Blog.FeaturedImageUrl" alt="@Model.Blog.Title">
                        </div>
                    }
                    @if (ViewBag.CurrentUser != null && ViewBag.CurrentUser.UserId == Model.Blog.UserId)
                    {
                        <a href="@Url.Action("Edit", "Blogs", new { id = Model.Blog.BlogId })" class="btn btn-primary mb-3">Chỉnh sửa</a>
                    }
                    <div class="blog_details">
                        <h2>@Model.Blog.Title</h2>
                        <ul class="blog-info-link mt-3 mb-4">
                            <li><i class="fa fa-user"></i> @Model.Blog.AuthorName (@Model.Blog.AuthorRole)</li>
                            @if (!string.IsNullOrEmpty(Model.Blog.Category))
                            {
                                <li><i class="fa fa-tag"></i> @Model.Blog.Category</li>
                            }
                            <li><i class="fa fa-calendar"></i> @Model.Blog.PublishedAt?.ToString("dd/MM/yyyy")</li>
                            <li><i class="fa fa-comments"></i> @(Model.Blog.Status == "Published" ? Model.Blog.CommentCount : 0) Bình luận</li>
                            <li><i class="fa fa-heart"></i> @(Model.Blog.Status == "Published" ? Model.Blog.LikeCount : 0) Lượt thích</li>
                        </ul>
                        <div class="blog-content">
                            @Html.Raw(Model.Blog.Content)
                        </div>

                        <!-- Like Section -->
                        <div class="like-section">
                            <button type="button" class="like-btn @(Model.Blog.Status == "Published" ? (Model.Blog.IsLikedByCurrentUser ? "liked" : "") : "disabled-btn")"
                                    onclick="@(Model.Blog.Status == "Published" ? "toggleLike(" + Model.Blog.BlogId + ")" : "")"
                            @(Model.Blog.Status != "Published" ? "disabled" : "")>
                                <i class="fa fa-heart"></i>
                                <span id="like-count">@(Model.Blog.Status == "Published" ? Model.Blog.LikeCount : 0)</span>
                                <span id="like-text">@(Model.Blog.Status == "Published" ? (Model.Blog.IsLikedByCurrentUser ? "Đã thích" : "Thích") : "Không khả dụng")</span>
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Comments Section -->
                <div class="comments-section">
                    <h4>@(Model.Blog.Status == "Published" ? Model.Blog.CommentCount + " Bình luận" : "Bài viết chưa được duyệt, không có bình luận")</h4>

                    <!-- Comment Form -->
                    @if (ViewBag.CurrentUser != null && Model.Blog.Status == "Published")
                    {
                        <div class="comment-form">
                            <h5>Để lại bình luận</h5>
                            <form id="comment-form">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="blogId" value="@Model.Blog.BlogId" />
                                <input type="hidden" name="parentCommentId" id="comment-parent-id" value="" />
                                <div class="form-group">
                                    <textarea name="content" class="form-control" id="comment-content" rows="4"
                                              placeholder="Nhập bình luận của bạn..." required></textarea>
                                </div>
                                <button type="submit" class="btn btn-primary">Gửi bình luận</button>
                                <button type="button" class="btn btn-secondary cancel-reply" style="display:none;">Hủy trả lời</button>
                            </form>
                        </div>
                    }
                    else if (ViewBag.CurrentUser != null && Model.Blog.Status != "Published")
                    {
                        <div class="comment-form">
                            <p>Bài viết chưa được duyệt, không thể bình luận.</p>
                        </div>
                    }
                    else
                    {
                        <div class="comment-form">
                            <p>Bạn cần <a href="@Url.Action("Login", "Login")">đăng nhập</a> để bình luận.</p>
                        </div>
                    }

                    <!-- Comments List -->
                    <div class="comments-list">
                        @if (Model.Comments.Any() && Model.Blog.Status == "Published")
                        {
                            @foreach (var comment in Model.Comments)
                            {
                                <div class="comment-item" data-comment-id="@comment.CommentId">
                                    <div class="comment-header">
                                        <span class="comment-author">@comment.UserName</span>
                                        @if (comment.UserRole == "Admin")
                                        {
                                            <span class="author-badge">ADMIN</span>
                                        }
                                        else if (comment.UserRole == "Employee")
                                        {
                                            <span class="author-badge employee-badge">NHÂN VIÊN</span> <!-- Thay 'Staff' bằng 'Employee' -->
                                        }
                                        <span class="comment-date">@comment.CreatedAt?.ToString("dd/MM/yyyy HH:mm")</span>
                                    </div>
                                    <div class="comment-content">
                                        @comment.Content
                                    </div>
                                    @if (ViewBag.CurrentUser != null)
                                    {
                                        <button type="button" class="reply-btn" data-comment-id="@comment.CommentId">
                                            Trả lời
                                        </button>
                                    }
                                    <div class="reply-form" id="reply-form-@comment.CommentId" style="display:none;">
                                        <textarea class="form-control mb-2" id="reply-content-@comment.CommentId" placeholder="Nhập câu trả lời của bạn..."></textarea>
                                        <button class="btn btn-sm btn-success submit-reply" data-blog-id="@Model.Blog.BlogId" data-comment-id="@comment.CommentId">Gửi</button>
                                        <button class="btn btn-sm btn-secondary cancel-reply" onclick="cancelReply('@comment.CommentId')">Hủy</button>
                                    </div>

                                    <!-- Replies -->
                                    @if (comment.Replies.Any())
                                    {
                                        <div class="comment-replies">
                                            @foreach (var reply in comment.Replies)
                                            {
                                                <div class="comment-item" data-comment-id="@reply.CommentId">
                                                    <div class="comment-header">
                                                        <span class="comment-author">@reply.UserName</span>
                                                        @if (reply.UserRole == "Admin")
                                                        {
                                                            <span class="author-badge">ADMIN</span>
                                                        }
                                                        else if (reply.UserRole == "Employee")
                                                        {
                                                            <span class="author-badge employee-badge">NHÂN VIÊN</span> <!-- Thay 'Staff' bằng 'Employee' -->
                                                        }
                                                        <span class="comment-date">@reply.CreatedAt?.ToString("dd/MM/yyyy HH:mm")</span>
                                                    </div>
                                                    <div class="comment-content">
                                                        @reply.Content
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            }
                        }
                        else if (Model.Blog.Status != "Published")
                        {
                            <p class="text-center text-muted">Bài viết chưa được duyệt, không có bình luận để hiển thị.</p>
                        }
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="col-lg-4">
                <div class="blog_right_sidebar">
                    <!-- Related Blogs -->
                    @if (Model.RelatedBlogs.Any())
                    {
                        <aside class="single_sidebar_widget popular_post_widget">
                            <h3 class="widget_title">Bài viết liên quan</h3>
                            @foreach (var relatedBlog in Model.RelatedBlogs)
                            {
                                <div class="media post_item">
                                    @if (!string.IsNullOrEmpty(relatedBlog.FeaturedImageUrl))
                                    {
                                        <img src="@relatedBlog.FeaturedImageUrl" alt="@relatedBlog.Title" style="width: 80px; height: 80px; object-fit: cover;">
                                    }
                                    else
                                    {
                                        <img src="~/img/blog/popular_post.jpg" alt="@relatedBlog.Title" style="width: 80px; height: 80px; object-fit: cover;">
                                    }
                                    <div class="media-body">
                                        <a href="@Url.Action("Detail", "Blogs", new { id = relatedBlog.BlogId })">
                                            <h3>@relatedBlog.Title</h3>
                                        </a>
                                        <p>@relatedBlog.PublishedAt?.ToString("dd/MM/yyyy")</p>
                                    </div>
                                </div>
                            }
                        </aside>
                    }

                    <!-- Categories -->
                    <aside class="single_sidebar_widget tag_cloud_widget">
                        <h4 class="widget_title">Danh mục</h4>
                        <ul class="list">
                            <li><a href="@Url.Action("Index", "Blogs", new { category = "Chăm sóc thú cưng" })" class="d-flex"><p>Chăm sóc thú cưng</p></a></li>
                            <li><a href="@Url.Action("Index", "Blogs", new { category = "Sức khỏe" })" class="d-flex"><p>Sức khỏe</p></a></li>
                            <li><a href="@Url.Action("Index", "Blogs", new { category = "Dinh dưỡng" })" class="d-flex"><p>Dinh dưỡng</p></a></li>
                            <li><a href="@Url.Action("Index", "Blogs", new { category = "Huấn luyện" })" class="d-flex"><p>Huấn luyện</p></a></li>
                        </ul>
                    </aside>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        // Toggle Like functionality
        function toggleLike(blogId) {
            $.ajax({
                url: '@Url.Action("ToggleLike", "Blogs")',
                type: 'POST',
                data: {
                    blogId: blogId,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        $('#like-count').text(response.likeCount);
                        $('#like-text').text(response.isLiked ? 'Đã thích' : 'Thích');
                        $('.like-btn').toggleClass('liked', response.isLiked);
                        showMessage(response.message, 'success');
                    } else {
                        showMessage(response.message, 'error');
                    }
                },
                error: function() {
                    showMessage('Có lỗi xảy ra khi thực hiện thao tác.', 'error');
                }
            });
        }

        // Comment form submission
        $(document).ready(function() {
            $('#comment-form').on('submit', function(e) {
                e.preventDefault();
                var formData = $(this).serialize();
                $.ajax({
                    url: '@Url.Action("AddComment", "Blogs")',
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        if (response.success) {
                            showMessage(response.message, 'success');
                            addCommentToDOM(response);
                            $('#comment-content').val('');
                            $('#comment-parent-id').val('');
                            $('.cancel-reply').hide();
                            updateCommentCount();
                        } else {
                            showMessage(response.message, 'error');
                        }
                    },
                    error: function(xhr, status, error) {
                        console.log('AJAX Error:', xhr, status, error);
                        showMessage('Có lỗi xảy ra khi gửi bình luận.', 'error');
                    }
                });
            });

            $('.reply-btn').click(function(e) {
                e.preventDefault();
                var commentId = $(this).data('comment-id');
                $('.reply-form').hide();
                var $replyForm = $('#reply-form-' + commentId);
                if ($replyForm.length) {
                    $replyForm.show();
                } else {
                    var formHtml = `
                        <div class="reply-form" id="reply-form-${commentId}">
                            <textarea class="form-control mb-2" id="reply-content-${commentId}" placeholder="Nhập câu trả lời của bạn..."></textarea>
                            <button class="btn btn-sm btn-success submit-reply" data-blog-id="@Model.Blog.BlogId" data-comment-id="${commentId}">Gửi</button>
                            <button class="btn btn-sm btn-secondary cancel-reply" onclick="cancelReply('${commentId}')">Hủy</button>
                        </div>`;
                    $(this).parent().append(formHtml);
                }
            });

            $(document).on('click', '.submit-reply', function() {
                var blogId = $(this).data('blog-id');
                var commentId = $(this).data('comment-id');
                var content = $('#reply-content-' + commentId).val();
                $.ajax({
                    url: '@Url.Action("AddComment", "Blogs")',
                    type: 'POST',
                    data: {
                        blogId: blogId,
                        content: content,
                        parentCommentId: commentId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showMessage(response.message, 'success');
                            addCommentToDOM(response);
                            $('#reply-form-' + commentId).hide();
                            updateCommentCount();
                        } else {
                            showMessage(response.message, 'error');
                        }
                    },
                    error: function(xhr, status, error) {
                        console.log('AJAX Error:', xhr, status, error);
                        showMessage('Có lỗi xảy ra khi gửi trả lời.', 'error');
                    }
                });
            });

            function cancelReply(commentId) {
                $('#reply-form-' + commentId).hide();
            }

        });

        function addCommentToDOM(response) {
            var badgeHtml = response.userRole === 'Admin' ? '<span class="author-badge">ADMIN</span>' :
                             response.userRole === 'Employee' ? '<span class="author-badge employee-badge">NHÂN VIÊN</span>' : '';
            var replyButtonHtml = '@ViewBag.CurrentUser' != null ?
                '<button type="button" class="reply-btn" data-comment-id="' + (response.parentCommentId || 'null') + '">Trả lời</button>' : '';

            var commentHtml = `<div class="comment-item new-comment" data-comment-id="${response.parentCommentId ? 'reply-' + Date.now() : 'new'}">
                <div class="comment-header">
                    <span class="comment-author">${response.userName}</span>
                    ${badgeHtml}
                    <span class="comment-date">${response.createdAt}</span>
                </div>
                <div class="comment-content">${response.content}</div>
                ${replyButtonHtml}
            </div>`;

            if (response.parentCommentId) {
                var parentComment = $('.comment-item[data-comment-id="' + response.parentCommentId + '"]');
                var repliesSection = parentComment.find('.comment-replies');
                if (repliesSection.length === 0) {
                    repliesSection = $('<div class="comment-replies"></div>');
                    parentComment.append(repliesSection);
                }
                repliesSection.append(commentHtml);
            } else {
                if ($('.comments-list .comment-item').length === 0) {
                    $('.comments-list').html(commentHtml);
                } else {
                    $('.comments-list').append(commentHtml);
                }
            }

            $('.new-comment').addClass('highlight');
            setTimeout(() => $('.new-comment').removeClass('highlight new-comment'), 3000);
        }

        function updateCommentCount() {
            var currentCount = parseInt($('.comments-section h4').text().match(/\d+/)?.[0]) || 0;
            var newCount = currentCount + 1;
            $('.comments-section h4').text(newCount + ' Bình luận');
            $('.blog-info-link li').each(function() {
                if ($(this).text().includes('Bình luận')) {
                    $(this).html('<i class="fa fa-comments"></i> ' + newCount + ' Bình luận');
                }
            });
        }

        function showMessage(message, type) {
            var alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
            var alertHtml = `<div class="alert ${alertClass} alert-dismissible fade show" role="alert">
                ${message}
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>`;
            $('.alert').remove();
            $('.comments-section').prepend(alertHtml);
            setTimeout(() => $('.alert').fadeOut(), 5000);
        }
    </script>
}